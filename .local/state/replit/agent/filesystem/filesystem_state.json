{"file_contents":{"ReadMe.md":{"content":"# Overview\n\nThis is a comprehensive corporate website for Gill Technologies, showcasing their AI-powered market intelligence and brand strategy services. Built with React and Express using a modern TypeScript stack, the project features multiple pages including Home, About, Innovation, Brand Strategy, and Brand Experience. The application follows a monorepo structure with separate client and server directories, sharing common schemas and types.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## Recent Changes (January 2025)\n\n### Project Development: Gill Technologies Corporate Website\n- **Home Page**: Fully implemented with hero section, statistics, services showcase, case study, testimonials, and call-to-action\n- **About Page**: Created with company overview, team information, achievements, and DISH Competition 2024 recognition  \n- **Innovation Page**: Developed featuring AI-driven insights, market research capabilities, and rapid prototyping services\n- **Brand Strategy Page**: Built showcasing content marketing, identity development, and customer relationship techniques\n- **Brand Experience Page**: Implemented focusing on digital storytelling, UX design, and immersive campaigns\n- **Navigation Component**: Shared navigation bar with dropdown menu for Solutions (Innovation, Brand Strategy, Brand Experience)\n- **Footer Component**: Reusable footer with company information, service links, and contact details\n- **Routing System**: Complete routing setup using Wouter for all pages (/about, /innovation, /brand-strategy, /brand-experience)\n- **Design Consistency**: Maintained brand colors (primary blue #1e40af, secondary orange #ff7849) and typography throughout\n- **Responsive Design**: Mobile-first approach with responsive layouts across all pages\n\n### Technical Implementation\n- All pages use shared Navigation and Footer components for consistency\n- Original creative designs implemented while maintaining design cohesion\n- Clean separation of concerns with reusable components\n- TypeScript integration with proper type safety\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Build Tool**: Vite for fast development and optimized builds\n- **UI Framework**: Tailwind CSS with shadcn/ui component library\n- **State Management**: TanStack React Query for server state management\n- **Routing**: Wouter for lightweight client-side routing\n- **Form Handling**: React Hook Form with Hookform/resolvers\n- **Styling**: Tailwind CSS with CSS custom properties for theming\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js\n- **Language**: TypeScript with ESM modules\n- **Development**: tsx for TypeScript execution in development\n- **Production Build**: esbuild for fast compilation\n\n### Data Storage Solutions\n- **Database**: PostgreSQL (configured for Neon Database)\n- **ORM**: Drizzle ORM with TypeScript-first approach\n- **Schema Management**: Drizzle Kit for migrations\n- **Development Storage**: In-memory storage implementation for development/testing\n\n### Authentication and Authorization\n- **Session Management**: Express sessions with connect-pg-simple for PostgreSQL session store\n- **Current Status**: Authentication system is scaffolded but not fully implemented\n\n## Key Components\n\n### Shared Schema (`/shared/schema.ts`)\n- Centralized database schema definitions using Drizzle ORM\n- Type-safe schema with Zod validation integration\n- Currently defines a basic users table with username and password fields\n\n### Client Structure (`/client/`)\n- **Entry Point**: `main.tsx` bootstraps the React application\n- **App Component**: Sets up providers (React Query, Tooltip, Toast)\n- **Pages**: Modular page components with routing\n- **UI Components**: Complete shadcn/ui component library\n- **Hooks**: Custom hooks for mobile detection and toast notifications\n- **Utilities**: Helper functions for styling and API requests\n\n### Server Structure (`/server/`)\n- **Entry Point**: `index.ts` with Express app setup and middleware\n- **Routes**: API route registration system\n- **Storage**: Abstracted storage interface with in-memory implementation\n- **Vite Integration**: Development server with HMR support\n\n### Configuration Files\n- **Tailwind**: Configured with shadcn/ui styling system\n- **TypeScript**: Strict mode enabled with path mapping\n- **Drizzle**: PostgreSQL dialect with migration support\n- **Vite**: React plugin with Replit-specific development features\n\n## Data Flow\n\n1. **Client Requests**: React components use TanStack Query for API calls\n2. **API Layer**: Express routes handle HTTP requests under `/api` prefix  \n3. **Business Logic**: Route handlers use the storage interface for data operations\n4. **Data Persistence**: Storage implementation handles database operations via Drizzle ORM\n5. **Response Flow**: JSON responses flow back through the middleware stack to the client\n\n## External Dependencies\n\n### Database\n- **Neon Database**: Serverless PostgreSQL hosting\n- **Connection**: Via DATABASE_URL environment variable\n- **Fallback**: In-memory storage for development without database\n\n### UI Libraries\n- **Radix UI**: Unstyled, accessible UI primitives\n- **Lucide React**: Icon library\n- **Tailwind CSS**: Utility-first styling framework\n\n### Development Tools\n- **Replit Integration**: Custom Vite plugins for Replit environment\n- **Error Handling**: Runtime error overlay for development\n- **Code Mapping**: Cartographer plugin for enhanced debugging\n\n## Deployment Strategy\n\n### Development\n- **Local Development**: `npm run dev` starts both client and server with HMR\n- **Database**: Uses in-memory storage by default, can connect to PostgreSQL with DATABASE_URL\n- **Hot Reload**: Vite handles client-side updates, tsx handles server restarts\n\n### Production Build\n- **Client Build**: Vite compiles React app to `/dist/public`\n- **Server Build**: esbuild bundles Express server to `/dist/index.js`\n- **Static Assets**: Express serves built client files in production\n- **Database**: Requires PostgreSQL connection via DATABASE_URL\n\n### Environment Variables\n- **DATABASE_URL**: PostgreSQL connection string (required for production)\n- **NODE_ENV**: Environment flag for production/development behavior\n- **REPL_ID**: Replit-specific identifier for development features\n\nThe application is designed to work seamlessly in both development and production environments, with particular attention to Replit's hosting platform while maintaining compatibility with standard Node.js deployments.","size_bytes":6537},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Overview\n\nThis is a comprehensive corporate website for Gill Technologies, showcasing their AI-powered market intelligence and brand strategy services. Built with React and Express using a modern TypeScript stack, the website features multiple pages including Home, About, Innovation, Brand Strategy, Brand Experience, and Contact pages. The application uses a modern component-based architecture with shadcn/ui components, Tailwind CSS for styling, and is configured for deployment to GitHub Pages.\n\n# User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n# System Architecture\n\n## Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern development\n- **Build Tool**: Vite for fast development builds and optimized production bundles\n- **Routing**: Wouter for lightweight client-side routing, configured with GitHub Pages base path\n- **UI Framework**: shadcn/ui component library built on Radix UI primitives for accessible components\n- **Styling**: Tailwind CSS with custom CSS variables for theming and responsive design\n- **State Management**: TanStack React Query for server state management and API interactions\n- **Form Handling**: React Hook Form with Hookform resolvers for form validation\n- **Animations**: Framer Motion for advanced animations and micro-interactions\n\n## Backend Architecture\n- **Runtime**: Node.js with Express.js framework\n- **Language**: TypeScript with ESM modules for modern JavaScript features\n- **Development**: tsx for TypeScript execution in development mode\n- **Production Build**: esbuild for fast compilation and bundling\n- **Storage Interface**: Abstract storage layer with in-memory implementation for development\n\n## Design System\n- **Typography**: Custom font stack with Poppins, League Spartan, and Inter fonts\n- **Color Scheme**: Brand colors with primary blue (#1e40af) and secondary orange (#ff7849)\n- **Component Library**: Comprehensive shadcn/ui components with consistent styling\n- **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n\n## Data Storage Solutions\n- **Database**: PostgreSQL configured for Neon Database in production\n- **ORM**: Drizzle ORM with TypeScript-first schema definitions\n- **Schema Management**: Drizzle Kit for database migrations and schema management\n- **Development Storage**: In-memory storage implementation for local development and testing\n\n# External Dependencies\n\n## Database & Hosting\n- **Neon Database**: Serverless PostgreSQL database for production data storage\n- **GitHub Pages**: Static site hosting with custom base path configuration\n\n## UI & Styling\n- **Radix UI**: Accessible component primitives for complex UI components\n- **Tailwind CSS**: Utility-first CSS framework with PostCSS processing\n- **Framer Motion**: Animation library for smooth transitions and interactions\n- **Lucide React**: Icon library for consistent iconography\n\n## Development Tools\n- **Replit Integration**: Development environment plugins and error handling\n- **TypeScript**: Static type checking across the entire application\n- **ESLint & Prettier**: Code quality and formatting tools (implied by TypeScript setup)","size_bytes":3164},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  base: \"/GILLTECH-WEBSITE-REVAMPED/\", // For GitHub Pages subpath\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer()\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1037},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n const port = parseInt(process.env.PORT || '5000', 10);\n\nserver.listen({\n  port,\n  host: \"0.0.0.0\",\n}, () => {\n  log(`Serving on http://0.0.0.0:${port}`);\n});\n})();\n","size_bytes":2043},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { users, type User, type InsertUser } from \"@shared/schema\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: number): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<number, User>;\n  currentId: number;\n\n  constructor() {\n    this.users = new Map();\n    this.currentId = 1;\n  }\n\n  async getUser(id: number): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = this.currentId++;\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":1012},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { pgTable, text, serial, integer, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: serial(\"id\").primaryKey(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":533},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Innovation from \"@/pages/innovation\";\nimport BrandStrategy from \"@/pages/brand-strategy\";\nimport BrandExperience from \"@/pages/brand-experience\";\nimport Contact from \"@/pages/contact\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/innovation\" component={Innovation} />\n      <Route path=\"/brand-strategy\" component={BrandStrategy} />\n      <Route path=\"/brand-experience\" component={BrandExperience} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1218},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&family=League+Spartan:wght@400;500;600;700;800&family=Inter:wght@300;400;500;600;700&display=swap');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Custom animations and micro-interactions */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes float {\n  0%, 100% {\n    transform: translateY(0px);\n  }\n  50% {\n    transform: translateY(-10px);\n  }\n}\n\n@keyframes slideInLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideInRight {\n  from {\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes scaleIn {\n  from {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n@keyframes pulse {\n  0%, 100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n}\n\n@keyframes scroll {\n  0% {\n    transform: translateX(0);\n  }\n  100% {\n    transform: translateX(-50%);\n  }\n}\n\n@keyframes slideLeft {\n  0% {\n    transform: translateX(100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes slideRight {\n  0% {\n    transform: translateX(-100%);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n.animate-fade-in-up {\n  animation: fadeInUp 0.6s ease-out forwards;\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n.animate-slide-in-left {\n  animation: slideInLeft 0.6s ease-out forwards;\n}\n\n.animate-slide-in-right {\n  animation: slideInRight 0.6s ease-out forwards;\n}\n\n.animate-scale-in {\n  animation: scaleIn 0.5s ease-out forwards;\n}\n\n.animate-pulse-gentle {\n  animation: pulse 2s ease-in-out infinite;\n}\n\n.animate-scroll {\n  animation: scroll 30s linear infinite;\n}\n\n.animate-slide-left {\n  animation: slideLeft 0.5s ease-out forwards;\n}\n\n.animate-slide-right {\n  animation: slideRight 0.5s ease-out forwards;\n}\n\n.animation-delay-300 {\n  animation-delay: 300ms;\n}\n\n.animation-delay-600 {\n  animation-delay: 600ms;\n}\n\n.animation-delay-900 {\n  animation-delay: 900ms;\n}\n\n.animation-delay-1000 {\n  animation-delay: 1000ms;\n}\n\n/* Scroll-based animations */\n@supports (animation-timeline: scroll()) {\n  .scroll-animate {\n    animation: fadeInUp linear both;\n    animation-timeline: view();\n    animation-range: entry 0% cover 40%;\n  }\n}\n\n/* Smooth scrolling */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Inertia-based scroll for webkit browsers */\n* {\n  -webkit-overflow-scrolling: touch;\n}\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(20, 14.3%, 4.1%);\n  --muted: hsl(60, 4.8%, 95.9%);\n  --muted-foreground: hsl(25, 5.3%, 44.7%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(20, 14.3%, 4.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(20, 14.3%, 4.1%);\n  --border: hsl(20, 5.9%, 90%);\n  --input: hsl(20, 5.9%, 90%);\n  --primary: hsl(215, 96%, 28%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(26, 100%, 52%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --accent: hsl(60, 4.8%, 95.9%);\n  --accent-foreground: hsl(24, 9.8%, 10%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(20, 14.3%, 4.1%);\n  --radius: 0.5rem;\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --primary: hsl(215, 96%, 28%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(26, 100%, 52%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --radius: 0.5rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Inter', sans-serif;\n  }\n\n  .font-poppins {\n    font-family: 'Poppins', sans-serif;\n  }\n\n  .font-spartan {\n    font-family: 'League Spartan', sans-serif;\n  }\n\n  .font-inter {\n    font-family: 'Inter', sans-serif;\n  }\n\n  .brand-primary {\n    color: hsl(215, 96%, 28%);\n  }\n\n  .brand-secondary {\n    color: hsl(26, 100%, 52%);\n  }\n\n  .bg-brand-primary {\n    background-color: hsl(215, 96%, 28%);\n  }\n\n  .bg-brand-secondary {\n    background-color: hsl(26, 100%, 52%);\n  }\n\n  .text-brand-primary {\n    color: hsl(215, 96%, 28%);\n  }\n\n  .text-brand-secondary {\n    color: hsl(26, 100%, 52%);\n  }\n\n  .border-brand-primary {\n    border-color: hsl(215, 96%, 28%);\n  }\n\n  .border-brand-secondary {\n    border-color: hsl(26, 100%, 52%);\n  }\n}\n\n@layer utilities {\n  .animate-fade-in-up {\n    animation: fadeInUp 0.6s ease-out forwards;\n  }\n\n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  .glass-effect {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n}\n","size_bytes":5466},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { Router } from \"wouter\";\n\ncreateRoot(document.getElementById(\"root\")!).render(\n  <Router base=\"/\">\n    <App />\n  </Router>\n);\n","size_bytes":228},"client/src/components/Prism.tsx":{"content":"import React, { useEffect, useRef } from 'react';\nimport { Renderer, Triangle, Program, Mesh } from 'ogl';\n\ntype PrismProps = {\n  height?: number;\n  baseWidth?: number;\n  animationType?: 'rotate' | 'hover' | '3drotate';\n  glow?: number;\n  offset?: { x?: number; y?: number };\n  noise?: number;\n  transparent?: boolean;\n  scale?: number;\n  hueShift?: number;\n  colorFrequency?: number;\n  hoverStrength?: number;\n  inertia?: number;\n  bloom?: number;\n  suspendWhenOffscreen?: boolean;\n  timeScale?: number;\n};\n\nconst Prism: React.FC<PrismProps> = ({\n  height = 3.5,\n  baseWidth = 5.5,\n  animationType = 'rotate',\n  glow = 1,\n  offset = { x: 0, y: 0 },\n  noise = 0.5,\n  transparent = true,\n  scale = 3.6,\n  hueShift = 0,\n  colorFrequency = 1,\n  hoverStrength = 2,\n  inertia = 0.05,\n  bloom = 1,\n  suspendWhenOffscreen = false,\n  timeScale = 0.5\n}) => {\n  const containerRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const H = Math.max(0.001, height);\n    const BW = Math.max(0.001, baseWidth);\n    const BASE_HALF = BW * 0.5;\n    const GLOW = Math.max(0.0, glow);\n    const NOISE = Math.max(0.0, noise);\n    const offX = offset?.x ?? 0;\n    const offY = offset?.y ?? 0;\n    const SAT = transparent ? 1.5 : 1;\n    const SCALE = Math.max(0.001, scale);\n    const HUE = hueShift || 0;\n    const CFREQ = Math.max(0.0, colorFrequency || 1);\n    const BLOOM = Math.max(0.0, bloom || 1);\n    const RSX = 1;\n    const RSY = 1;\n    const RSZ = 1;\n    const TS = Math.max(0, timeScale || 1);\n    const HOVSTR = Math.max(0, hoverStrength || 1);\n    const INERT = Math.max(0, Math.min(1, inertia || 0.12));\n\n    const dpr = Math.min(2, window.devicePixelRatio || 1);\n    const renderer = new Renderer({\n      dpr,\n      alpha: transparent,\n      antialias: false\n    });\n    const gl = renderer.gl;\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.BLEND);\n\n    Object.assign(gl.canvas.style, {\n      position: 'absolute',\n      inset: '0',\n      width: '100%',\n      height: '100%',\n      display: 'block'\n    } as Partial<CSSStyleDeclaration>);\n    container.appendChild(gl.canvas);\n\n    const vertex = /* glsl */ `\n      attribute vec2 position;\n      void main() {\n        gl_Position = vec4(position, 0.0, 1.0);\n      }\n    `;\n\n    const fragment = /* glsl */ `\n      precision highp float;\n\n      uniform vec2  iResolution;\n      uniform float iTime;\n\n      uniform float uHeight;\n      uniform float uBaseHalf;\n      uniform mat3  uRot;\n      uniform int   uUseBaseWobble;\n      uniform float uGlow;\n      uniform vec2  uOffsetPx;\n      uniform float uNoise;\n      uniform float uSaturation;\n      uniform float uScale;\n      uniform float uHueShift;\n      uniform float uColorFreq;\n      uniform float uBloom;\n      uniform float uCenterShift;\n      uniform float uInvBaseHalf;\n      uniform float uInvHeight;\n      uniform float uMinAxis;\n      uniform float uPxScale;\n      uniform float uTimeScale;\n\n      vec4 tanh4(vec4 x){\n        vec4 e2x = exp(2.0*x);\n        return (e2x - 1.0) / (e2x + 1.0);\n      }\n\n      float rand(vec2 co){\n        return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453123);\n      }\n\n      float sdOctaAnisoInv(vec3 p){\n        vec3 q = vec3(abs(p.x) * uInvBaseHalf, abs(p.y) * uInvHeight, abs(p.z) * uInvBaseHalf);\n        float m = q.x + q.y + q.z - 1.0;\n        return m * uMinAxis * 0.5773502691896258;\n      }\n\n      float sdPyramidUpInv(vec3 p){\n        float oct = sdOctaAnisoInv(p);\n        float halfSpace = -p.y;\n        return max(oct, halfSpace);\n      }\n\n      mat3 hueRotation(float a){\n        float c = cos(a), s = sin(a);\n        mat3 W = mat3(\n          0.299, 0.587, 0.114,\n          0.299, 0.587, 0.114,\n          0.299, 0.587, 0.114\n        );\n        mat3 U = mat3(\n           0.701, -0.587, -0.114,\n          -0.299,  0.413, -0.114,\n          -0.300, -0.588,  0.886\n        );\n        mat3 V = mat3(\n           0.168, -0.331,  0.500,\n           0.328,  0.035, -0.500,\n          -0.497,  0.296,  0.201\n        );\n        return W + U * c + V * s;\n      }\n\n      void main(){\n        vec2 f = (gl_FragCoord.xy - 0.5 * iResolution.xy - uOffsetPx) * uPxScale;\n\n        float z = 5.0;\n        float d = 0.0;\n\n        vec3 p;\n        vec4 o = vec4(0.0);\n\n        float centerShift = uCenterShift;\n        float cf = uColorFreq;\n\n        mat2 wob = mat2(1.0);\n        if (uUseBaseWobble == 1) {\n          float t = iTime * uTimeScale;\n          float c0 = cos(t + 0.0);\n          float c1 = cos(t + 33.0);\n          float c2 = cos(t + 11.0);\n          wob = mat2(c0, c1, c2, c0);\n        }\n\n        const int STEPS = 100;\n        for (int i = 0; i < STEPS; i++) {\n          p = vec3(f, z);\n          p.xz = p.xz * wob;\n          p = uRot * p;\n          vec3 q = p;\n          q.y += centerShift;\n          d = 0.1 + 0.2 * abs(sdPyramidUpInv(q));\n          z -= d;\n          o += (sin((p.y + z) * cf + vec4(0.0, 1.0, 2.0, 3.0)) + 1.0) / d;\n        }\n\n        o = tanh4(o * o * (uGlow * uBloom) / 1e5);\n\n        vec3 col = o.rgb;\n        float n = rand(gl_FragCoord.xy + vec2(iTime));\n        col += (n - 0.5) * uNoise;\n        col = clamp(col, 0.0, 1.0);\n\n        float L = dot(col, vec3(0.2126, 0.7152, 0.0722));\n        col = clamp(mix(vec3(L), col, uSaturation), 0.0, 1.0);\n\n        if(abs(uHueShift) > 0.0001){\n          col = clamp(hueRotation(uHueShift) * col, 0.0, 1.0);\n        }\n\n        gl_FragColor = vec4(col, o.a);\n      }\n    `;\n\n    const geometry = new Triangle(gl);\n    const iResBuf = new Float32Array(2);\n    const offsetPxBuf = new Float32Array(2);\n\n    const program = new Program(gl, {\n      vertex,\n      fragment,\n      uniforms: {\n        iResolution: { value: iResBuf },\n        iTime: { value: 0 },\n        uHeight: { value: H },\n        uBaseHalf: { value: BASE_HALF },\n        uUseBaseWobble: { value: 1 },\n        uRot: { value: new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]) },\n        uGlow: { value: GLOW },\n        uOffsetPx: { value: offsetPxBuf },\n        uNoise: { value: NOISE },\n        uSaturation: { value: SAT },\n        uScale: { value: SCALE },\n        uHueShift: { value: HUE },\n        uColorFreq: { value: CFREQ },\n        uBloom: { value: BLOOM },\n        uCenterShift: { value: H * 0.25 },\n        uInvBaseHalf: { value: 1 / BASE_HALF },\n        uInvHeight: { value: 1 / H },\n        uMinAxis: { value: Math.min(BASE_HALF, H) },\n        uPxScale: {\n          value: 1 / ((gl.drawingBufferHeight || 1) * 0.1 * SCALE)\n        },\n        uTimeScale: { value: TS }\n      }\n    });\n    const mesh = new Mesh(gl, { geometry, program });\n\n    const resize = () => {\n      const w = container.clientWidth || 1;\n      const h = container.clientHeight || 1;\n      renderer.setSize(w, h);\n      iResBuf[0] = gl.drawingBufferWidth;\n      iResBuf[1] = gl.drawingBufferHeight;\n      offsetPxBuf[0] = offX * dpr;\n      offsetPxBuf[1] = offY * dpr;\n      program.uniforms.uPxScale.value = 1 / ((gl.drawingBufferHeight || 1) * 0.1 * SCALE);\n    };\n    const ro = new ResizeObserver(resize);\n    ro.observe(container);\n    resize();\n\n    const rotBuf = new Float32Array(9);\n    const setMat3FromEuler = (yawY: number, pitchX: number, rollZ: number, out: Float32Array) => {\n      const cy = Math.cos(yawY),\n        sy = Math.sin(yawY);\n      const cx = Math.cos(pitchX),\n        sx = Math.sin(pitchX);\n      const cz = Math.cos(rollZ),\n        sz = Math.sin(rollZ);\n      const r00 = cy * cz + sy * sx * sz;\n      const r01 = -cy * sz + sy * sx * cz;\n      const r02 = sy * cx;\n\n      const r10 = cx * sz;\n      const r11 = cx * cz;\n      const r12 = -sx;\n\n      const r20 = -sy * cz + cy * sx * sz;\n      const r21 = sy * sz + cy * sx * cz;\n      const r22 = cy * cx;\n\n      out[0] = r00;\n      out[1] = r10;\n      out[2] = r20;\n      out[3] = r01;\n      out[4] = r11;\n      out[5] = r21;\n      out[6] = r02;\n      out[7] = r12;\n      out[8] = r22;\n      return out;\n    };\n\n    const NOISE_IS_ZERO = NOISE < 1e-6;\n    let raf = 0;\n    const t0 = performance.now();\n    const startRAF = () => {\n      if (raf) return;\n      raf = requestAnimationFrame(render);\n    };\n    const stopRAF = () => {\n      if (!raf) return;\n      cancelAnimationFrame(raf);\n      raf = 0;\n    };\n\n    const rnd = () => Math.random();\n    const wX = (0.3 + rnd() * 0.6) * RSX;\n    const wY = (0.2 + rnd() * 0.7) * RSY;\n    const wZ = (0.1 + rnd() * 0.5) * RSZ;\n    const phX = rnd() * Math.PI * 2;\n    const phZ = rnd() * Math.PI * 2;\n\n    let yaw = 0,\n      pitch = 0,\n      roll = 0;\n    let targetYaw = 0,\n      targetPitch = 0;\n    const lerp = (a: number, b: number, t: number) => a + (b - a) * t;\n\n    const pointer = { x: 0, y: 0, inside: true };\n    const onMove = (e: PointerEvent) => {\n      const ww = Math.max(1, window.innerWidth);\n      const wh = Math.max(1, window.innerHeight);\n      const cx = ww * 0.5;\n      const cy = wh * 0.5;\n      const nx = (e.clientX - cx) / (ww * 0.5);\n      const ny = (e.clientY - cy) / (wh * 0.5);\n      pointer.x = Math.max(-1, Math.min(1, nx));\n      pointer.y = Math.max(-1, Math.min(1, ny));\n      pointer.inside = true;\n    };\n    const onLeave = () => {\n      pointer.inside = false;\n    };\n    const onBlur = () => {\n      pointer.inside = false;\n    };\n\n    let onPointerMove: ((e: PointerEvent) => void) | null = null;\n    if (animationType === 'hover') {\n      onPointerMove = (e: PointerEvent) => {\n        onMove(e);\n        startRAF();\n      };\n      window.addEventListener('pointermove', onPointerMove, { passive: true });\n      window.addEventListener('mouseleave', onLeave);\n      window.addEventListener('blur', onBlur);\n      program.uniforms.uUseBaseWobble.value = 0;\n    } else if (animationType === '3drotate') {\n      program.uniforms.uUseBaseWobble.value = 0;\n    } else {\n      program.uniforms.uUseBaseWobble.value = 1;\n    }\n\n    const render = (t: number) => {\n      const time = (t - t0) * 0.001;\n      program.uniforms.iTime.value = time;\n\n      let continueRAF = true;\n\n      if (animationType === 'hover') {\n        const maxPitch = 0.6 * HOVSTR;\n        const maxYaw = 0.6 * HOVSTR;\n        targetYaw = (pointer.inside ? -pointer.x : 0) * maxYaw;\n        targetPitch = (pointer.inside ? pointer.y : 0) * maxPitch;\n        const prevYaw = yaw;\n        const prevPitch = pitch;\n        const prevRoll = roll;\n        yaw = lerp(prevYaw, targetYaw, INERT);\n        pitch = lerp(prevPitch, targetPitch, INERT);\n        roll = lerp(prevRoll, 0, 0.1);\n        program.uniforms.uRot.value = setMat3FromEuler(yaw, pitch, roll, rotBuf);\n\n        if (NOISE_IS_ZERO) {\n          const settled =\n            Math.abs(yaw - targetYaw) < 1e-4 && Math.abs(pitch - targetPitch) < 1e-4 && Math.abs(roll) < 1e-4;\n          if (settled) continueRAF = false;\n        }\n      } else if (animationType === '3drotate') {\n        const tScaled = time * TS;\n        yaw = tScaled * wY;\n        pitch = Math.sin(tScaled * wX + phX) * 0.6;\n        roll = Math.sin(tScaled * wZ + phZ) * 0.5;\n        program.uniforms.uRot.value = setMat3FromEuler(yaw, pitch, roll, rotBuf);\n        if (TS < 1e-6) continueRAF = false;\n      } else {\n        rotBuf[0] = 1;\n        rotBuf[1] = 0;\n        rotBuf[2] = 0;\n        rotBuf[3] = 0;\n        rotBuf[4] = 1;\n        rotBuf[5] = 0;\n        rotBuf[6] = 0;\n        rotBuf[7] = 0;\n        rotBuf[8] = 1;\n        program.uniforms.uRot.value = rotBuf;\n        if (TS < 1e-6) continueRAF = false;\n      }\n\n      renderer.render({ scene: mesh });\n      if (continueRAF) {\n        raf = requestAnimationFrame(render);\n      } else {\n        raf = 0;\n      }\n    };\n\n    if (suspendWhenOffscreen) {\n      const io = new IntersectionObserver(entries => {\n        const vis = entries.some(e => e.isIntersecting);\n        if (vis) startRAF();\n        else stopRAF();\n      });\n      io.observe(container);\n      startRAF();\n      (container as any).__prismIO = io;\n    } else {\n      startRAF();\n    }\n\n    return () => {\n      stopRAF();\n      ro.disconnect();\n      if (animationType === 'hover') {\n        if (onPointerMove) window.removeEventListener('pointermove', onPointerMove as EventListener);\n        window.removeEventListener('mouseleave', onLeave);\n        window.removeEventListener('blur', onBlur);\n      }\n      if (suspendWhenOffscreen) {\n        const io = (container as any).__prismIO;\n        if (io) {\n          io.disconnect();\n          delete (container as any).__prismIO;\n        }\n      }\n      if (container.contains(gl.canvas)) {\n        container.removeChild(gl.canvas);\n      }\n      gl.getExtension('WEBGL_lose_context')?.loseContext();\n    };\n  }, [\n    height,\n    baseWidth,\n    animationType,\n    glow,\n    offset,\n    noise,\n    transparent,\n    scale,\n    hueShift,\n    colorFrequency,\n    hoverStrength,\n    inertia,\n    bloom,\n    suspendWhenOffscreen,\n    timeScale\n  ]);\n\n  return (\n    <div\n      ref={containerRef}\n      style={{\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none'\n      }}\n    />\n  );\n};\n\nexport default Prism;","size_bytes":13115},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* Company Info */}\n          <div className=\"col-span-1 lg:col-span-2\">\n            <div>\n              <Link href=\"/\" className=\"flex items-center mb-6\">\n              <img \n                src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/favicon.png\" \n                alt=\"Gill Technologies Logo\" \n                className=\"h-10 w-10 mr-3\"\n              />\n              <span className=\"font-spartan font-bold text-2xl text-white\">Gill Technologies</span>\n            </Link>\n            </div>\n            <p className=\"font-inter text-gray-300 text-lg mb-6 max-w-md\">\n              Transforming innovation into market-leading solutions. We help brands build impactful experiences through AI-driven insights and strategic innovation.\n            </p>\n            <div className=\"text-brand-secondary font-inter font-semibold text-lg\">Dream. Build. Grow.</div>\n          </div>\n\n          {/* Services */}\n          <div>\n            <h3 className=\"font-spartan font-bold text-lg text-white mb-6\">Services</h3>\n            <ul className=\"space-y-4\">\n              <li><Link href=\"/about\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">AI Strategy</Link></li>\n              <li><Link href=\"/brand-strategy\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">Brand Strategy</Link></li>\n              <li><Link href=\"/innovation\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">Innovation</Link></li>\n              <li><Link href=\"/brand-experience\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">Brand Experience</Link></li>\n            </ul>\n          </div>\n\n          {/* Links */}\n          <div>\n            <h3 className=\"font-spartan font-bold text-lg text-white mb-6\">Quick Links</h3>\n            <ul className=\"space-y-4\">\n              <li><Link href=\"/about\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">About Us</Link></li>\n              <li><a href=\"#\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">Privacy Policy</a></li>\n              <li><a href=\"#\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">Terms of Service</a></li>\n              <li><a href=\"#\" className=\"font-inter text-gray-300 hover:text-brand-secondary transition-colors duration-200\">Cookie Policy</a></li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Bottom Footer */}\n        <div className=\"border-t border-gray-800 mt-12 pt-8\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n           <p className=\"font-inter text-gray-400 text-sm\">\n              © {new Date().getFullYear()} Gill Technologies. All rights reserved.\n            </p>\n             <div className=\"flex items-center mt-4\">\n             <a href=\"https://www.digitalflwsolutions.com/\" \n                className=\"font-inter text-gray-400 hover:text-brand-secondary text-sm flex items-center\">\n  <span>\n    Developed by\n  </span>\n  <img \n    src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/logo_dfs.png\" \n    alt=\"Digital Flow Solutions Logo\" \n    className=\"h-5 w-30 ml-3\"\n  />\n</a>\n\n            </div>\n\n\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":3750},"client/src/components/navigation.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { useState } from \"react\";\nimport { Menu, X, ChevronDown } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function Navigation() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [solutionsDropdownOpen, setSolutionsDropdownOpen] = useState(false);\n  \n  let dropdownTimeout: NodeJS.Timeout;\n\n  return (\n    <nav className=\"bg-white shadow-sm border-b border-gray-100 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <div className=\"flex items-center\">\n            <Link href=\"/\" className=\"flex items-center\">\n              <img \n                src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/favicon.png\" \n                alt=\"Gill Technologies Logo\" \n                className=\"h-8 w-8 mr-2\"\n              />\n              <span className=\"font-spartan font-bold text-2xl text-brand-primary\">Gill Technologies</span>\n            </Link>\n          </div>\n          \n          {/* Desktop Navigation - moved to right side */}\n          <div className=\"hidden md:flex items-center space-x-4\">\n            <div \n              className=\"relative\"\n              onMouseEnter={() => {\n                clearTimeout(dropdownTimeout);\n                setSolutionsDropdownOpen(true);\n              }}\n              onMouseLeave={() => {\n                dropdownTimeout = setTimeout(() => setSolutionsDropdownOpen(false), 200);\n              }}\n            >\n              <button className=\"font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200 font-medium flex items-center\">\n                Solutions\n                <ChevronDown className=\"ml-1 w-4 h-4\" />\n              </button>\n              {solutionsDropdownOpen && (\n                <div className=\"absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-100 py-2 z-50\">\n                  <Link href=\"/innovation\">\n                    <div className=\"block px-4 py-2 font-inter text-gray-600 hover:text-brand-primary hover:bg-gray-50 transition-colors duration-200\">Innovation</div>\n                  </Link>\n                  <Link href=\"/brand-strategy\">\n                    <div className=\"block px-4 py-2 font-inter text-gray-600 hover:text-brand-primary hover:bg-gray-50 transition-colors duration-200\">Brand Strategy</div>\n                  </Link>\n                  <Link href=\"/brand-experience\">\n                    <div className=\"block px-4 py-2 font-inter text-gray-600 hover:text-brand-primary hover:bg-gray-50 transition-colors duration-200\">Brand Experience</div>\n                  </Link>\n                </div>\n              )}\n            </div>\n            <a href=\"#\" className=\"font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200 font-medium\">Case Studies</a>\n            <Link href=\"/about\" className=\"font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200 font-medium\">About</Link>\n            <Link href=\"/contact\">\n            <Button className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-600 text-white hover:from-orange-600 hover:via-gray-500 hover:to-blue-700 font-inter font-semibold transition-all duration-200 hover:shadow-lg\">\n              Book a Demo\n            </Button>\n            </Link>\n          </div>\n\n          {/* Mobile menu button */}\n          <div className=\"md:hidden\">\n            <button\n              onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n              className=\"text-gray-600 hover:text-brand-primary\"\n            >\n              {mobileMenuOpen ? <X size={24} /> : <Menu size={24} />}\n            </button>\n          </div>\n        </div>\n\n        {/* Mobile Navigation */}\n        {mobileMenuOpen && (\n          <div className=\"md:hidden border-t border-gray-100 py-4\">\n            <div className=\"flex flex-col space-y-4\">\n              <div>\n                <button \n                  className=\"font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200 font-medium flex items-center w-full text-left\"\n                  onClick={() => setSolutionsDropdownOpen(!solutionsDropdownOpen)}\n                >\n                  Solutions\n                  <ChevronDown className={`ml-1 w-4 h-4 transition-transform duration-200 ${solutionsDropdownOpen ? 'rotate-180' : ''}`} />\n                </button>\n                {solutionsDropdownOpen && (\n                  <div className=\"ml-4 mt-2 space-y-2\">\n                    <Link href=\"/innovation\">\n                      <div className=\"block font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200\">Innovation</div>\n                    </Link>\n                    <Link href=\"/brand-strategy\">\n                      <div className=\"block font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200\">Brand Strategy</div>\n                    </Link>\n                    <Link href=\"/brand-experience\">\n                      <div className=\"block font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200\">Brand Experience</div>\n                    </Link>\n                  </div>\n                )}\n              </div>\n              <a href=\"#\" className=\"font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200 font-medium\">Case Studies</a>\n              <Link href=\"/about\" className=\"font-inter text-gray-600 hover:text-brand-primary transition-colors duration-200 font-medium\">About</Link>\n              <Link href=\"/contact\">\n              <Button className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-600 text-white hover:from-orange-600 hover:via-gray-500 hover:to-blue-700 font-inter font-semibold transition-all duration-200 hover:shadow-lg w-full mt-4\">\n                Book a Demo\n              </Button>\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}","size_bytes":6068},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Link } from \"wouter\";\nimport { motion, useScroll, useTransform, useInView } from \"framer-motion\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { \n  ArrowRight, \n  Users, \n  Trophy, \n  Globe,\n  Target,\n  Brain,\n  CheckCircle,\n  Star,\n  Award,\n  Lightbulb,\n  Zap,\n  Heart,\n  Shield,\n  Rocket,\n  TrendingUp,\n  BarChart3,\n  Clock,\n  Eye,\n  Sparkles\n} from \"lucide-react\";\n\nexport default function About() {\n  const containerRef = useRef(null);\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start start\", \"end start\"]\n  });\n  \n  const backgroundY = useTransform(scrollYProgress, [0, 1], [\"0%\", \"50%\"]);\n  const textY = useTransform(scrollYProgress, [0, 1], [\"0%\", \"100%\"]);\n  \n  // Glitch effect state\n  const [glitching, setGlitching] = useState(false);\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setGlitching(true);\n      setTimeout(() => setGlitching(false), 200);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  \n  // Animation variants\n  const fadeInUp = {\n    initial: { opacity: 0, y: 60 },\n    animate: { opacity: 1, y: 0 },\n    transition: { duration: 0.6, ease: \"easeOut\" }\n  };\n  \n  const staggerContainer = {\n    animate: {\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n  \n  const glitchAnimation = {\n    x: glitching ? [0, -2, 2, -2, 2, 0] : 0,\n    textShadow: glitching \n      ? [\n        \"0 0 0 transparent\",\n        \"2px 0 0 #ff6b6b, -2px 0 0 #4ecdc4\",\n        \"-2px 0 0 #ff6b6b, 2px 0 0 #4ecdc4\",\n        \"2px 0 0 #ff6b6b, -2px 0 0 #4ecdc4\",\n        \"0 0 0 transparent\"\n      ]\n      : \"0 0 0 transparent\",\n    transition: { duration: 0.2 }\n  };\n  const stats = [\n    { number: \"30+\", label: \"Global Projects\", description: \"Successful projects worldwide\" },\n    { number: \"92%\", label: \"Client Satisfaction\", description: \"Exceptional results delivered\" },\n    { number: \"5,000+\", label: \"Solutions Deployed\", description: \"Innovative solutions implemented\" },\n    { number: \"3+\", label: \"Years Experience\", description: \"Years of proven expertise\" }\n  ];\n\n  const services = [\n    {\n      icon: Brain,\n      title: \"Strategic Campaign Planning\",\n      description: \"Comprehensive strategy development using AI-powered market intelligence and consumer behavior analysis.\"\n    },\n    {\n      icon: Target,\n      title: \"AI-Driven Advertising\",\n      description: \"Leverage predictive analytics and machine learning to optimize campaign performance and maximize ROI.\"\n    },\n    {\n      icon: Sparkles,\n      title: \"Brand Development & Innovation\",\n      description: \"Create compelling brand narratives and innovative solutions that resonate with modern consumers.\"\n    }\n  ];\n\n  const approach = [\n    {\n      step: \"01\",\n      title: \"Experience\",\n      subtitle: \"Integrity, Growth & Excellence\",\n      description: \"Our core values drive everything we do. We believe in honest partnerships, continuous innovation, and delivering exceptional results that exceed expectations.\"\n    },\n    {\n      step: \"02\", \n      title: \"Strategy\",\n      subtitle: \"Data-Driven Methodology\",\n      description: \"We leverage advanced analytics and AI-powered insights to develop comprehensive strategies that are both innovative and grounded in solid market research.\"\n    },\n    {\n      step: \"03\",\n      title: \"Innovation\",\n      subtitle: \"Cutting-Edge Solutions\", \n      description: \"Our team combines creative thinking with the latest technology to deliver breakthrough solutions that drive sustainable growth and competitive advantage.\"\n    }\n  ];\n\n  const team = [\n    {\n      name: \"Strategic Leadership\",\n      description: \"Our executive team brings decades of combined experience in AI, market research, and digital transformation across Fortune 500 companies.\",\n      image: \"https://media.istockphoto.com/id/1287677376/photo/television-streaming-multimedia-wall-concept.webp?a=1&b=1&s=612x612&w=0&k=20&c=hXXTBGHJCJzdHrlyjV93iUOep0IYvAls4eIC4bYuNP0=\"\n    },\n    {\n      name: \"Innovation Experts\", \n      description: \"A diverse team of data scientists, strategists, and creative professionals dedicated to pushing the boundaries of what's possible.\",\n      image: \"https://media.istockphoto.com/id/1419358775/photo/television-streaming-video-multimedia-wall.webp?a=1&b=1&s=612x612&w=0&k=20&c=ETEfAxL08FkYjtzeXa0vGBSDiaJyNbWkR2G9-5Z9gu4=\"\n    }\n  ];\n\n  return (\n    <motion.div \n      ref={containerRef}\n      className=\"min-h-screen bg-white\"\n      style={{ \n        scrollBehavior: \"smooth\"\n      }}\n    >\n      <Navigation />\n\n      {/* Hero Section */}\n      <motion.section \n        className=\"relative py-20 overflow-hidden\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n      > \n        \n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <motion.div \n              className=\"inline-flex items-center bg-white rounded-full px-6 py-3 shadow-lg mb-8\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2 }}\n              whileHover={{ \n                scale: 1.05,\n                boxShadow: \"0 20px 40px rgba(0,0,0,0.1)\"\n              }}\n            >\n              <motion.div\n                animate={{\n                  rotate: [0, 10, -10, 10, 0],\n                }}\n                transition={{\n                  duration: 2,\n                  repeat: Infinity,\n                  repeatDelay: 3\n                }}\n              >\n                <Sparkles className=\"w-5 h-5 text-orange-500 mr-2\" />\n              </motion.div>\n              <span className=\"font-inter text-gray-700 font-semibold\">About Gill Technologies</span>\n            </motion.div>\n            \n            <motion.h1 \n              className=\"font-spartan font-bold text-5xl lg:text-7xl text-gray-900 leading-tight mb-8\"\n              initial={{ opacity: 0, y: 50 }}\n              animate={{ opacity: 1, y: 0, ...glitchAnimation }}\n              transition={{ delay: 0.4, duration: 0.8 }}\n            >\n              Powerful, Lasting <br />\n              <motion.span \n                className=\"bg-gradient-to-r from-blue-500 via-orange-500 to-blue-500 bg-clip-text text-transparent\"\n                whileHover={{\n                  backgroundPosition: [\"0% 50%\", \"100% 50%\", \"0% 50%\"],\n                  transition: { duration: 2, repeat: Infinity }\n                }}\n              >\n                Brand Impact\n              </motion.span>\n            </motion.h1>\n            \n            <motion.p \n              className=\"font-inter text-gray-600 text-xl max-w-4xl mx-auto leading-relaxed mb-12\"\n              initial={{ opacity: 0, y: 30 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.6, duration: 0.8 }}\n            >\n              At our core, we are storytellers. With Years of experience in helping brands discover their authentic voice, we've learned that true brand power comes from understanding what makes each company unique and bringing that story to life.\n            </motion.p>\n            \n            <motion.div \n              className=\"flex flex-col md:flex-row gap-4 justify-center items-center\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.8, duration: 0.6 }}\n            >\n              <motion.div\n                whileHover={{ \n                  scale: 1.05,\n                  rotateY: 5,\n                  rotateX: 5\n                }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <Link href=\"/contact\">\n                  <Button className=\"bg-gradient-to-r from-blue-500 to-orange-500 text-white font-inter font-semibold px-8 py-4 rounded-xl hover:shadow-lg transition-all duration-300\">\n                   Get a Quote\n                    <motion.div\n                      animate={{ x: [0, 5, 0] }}\n                      transition={{ duration: 1.5, repeat: Infinity }}\n                    >\n                      <ArrowRight className=\"ml-2 w-5 h-5\" />\n                    </motion.div>\n                  </Button>\n                </Link>\n              </motion.div>\n              <motion.div\n                whileHover={{ \n                  scale: 1.05,\n                  rotateY: -5,\n                  rotateX: 5\n                }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <Link href=\"/innovation\">\n                  <Button variant=\"outline\" className=\"border-2 border-gray-300 text-gray-700 hover:border-orange-500 hover:text-orange-500 px-8 py-4 rounded-xl font-inter font-semibold\">\n                    View Our Work\n                  </Button>\n                </Link>\n              </motion.div>\n            </motion.div>\n          </div>\n          \n          {/* Stats Grid */}\n          <motion.div \n            className=\"grid grid-cols-2 md:grid-cols-4 gap-8 mt-20\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            animate=\"animate\"\n          >\n            {stats.map((stat, index) => {\n              const ref = useRef(null);\n              const isInView = useInView(ref, { once: true, margin: \"-100px\" });\n              \n              return (\n                <motion.div \n                  key={index} \n                  ref={ref}\n                  className=\"text-center\"\n                  variants={fadeInUp}\n                  initial=\"initial\"\n                  animate={isInView ? \"animate\" : \"initial\"}\n                  whileHover={{ \n                    scale: 1.05,\n                    rotateY: 10,\n                    rotateX: 10\n                  }}\n                  style={{\n                    transformStyle: \"preserve-3d\",\n                    perspective: \"1000px\"\n                  }}\n                >\n                  <motion.div \n                    className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-2\"\n                    initial={{ scale: 0 }}\n                    animate={isInView ? { scale: 1 } : { scale: 0 }}\n                    transition={{ delay: index * 0.1 + 0.5, type: \"spring\", stiffness: 200 }}\n                  >\n                    {stat.number}\n                  </motion.div>\n                  <div className=\"font-inter font-semibold text-gray-900 mb-1\">\n                    {stat.label}\n                  </div>\n                  <div className=\"font-inter text-gray-600 text-sm\">\n                    {stat.description}\n                  </div>\n                </motion.div>\n              );\n            })}\n          </motion.div>\n        </div>\n      </motion.section>\n\n      {/* Service Approach Section */}\n      <motion.section \n        className=\"py-20 bg-white\"\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.8 }}\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 50 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <motion.h2 \n              className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-6\"\n            >\n              Shaping Brands <br />\n              <span className=\"bg-gradient-to-r from-blue-500 via-orange-500 to-blue-500 bg-clip-text text-transparent\">\n                Through Powerful Advertising\n              </span>\n            </motion.h2>\n            <p className=\"font-inter text-gray-600 text-lg max-w-3xl mx-auto\">\n              Our strategic approach combines creativity with data-driven insights to deliver campaigns that not only capture attention but drive meaningful business results.\n            </p>\n          </motion.div>\n          \n          <motion.div \n            className=\"grid grid-cols-1 md:grid-cols-3 gap-8\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {services.map((service, index) => {\n              const ref = useRef(null);\n              const isInView = useInView(ref, { once: true, margin: \"-50px\" });\n              \n              return (\n                <motion.div\n                  key={index}\n                  ref={ref}\n                  variants={fadeInUp}\n                  whileHover={{ \n                    scale: 1.05,\n                    rotateY: 15,\n                    rotateX: 10,\n                    z: 50\n                  }}\n                  whileTap={{ scale: 0.95 }}\n                  style={{\n                    transformStyle: \"preserve-3d\",\n                    perspective: \"1000px\"\n                  }}\n                >\n                  <Card className=\"border-none shadow-lg hover:shadow-xl transition-all duration-300 h-full\">\n                    <CardContent className=\"p-8 text-center\">\n                      <motion.div \n                        className=\"bg-gradient-to-br from-blue-100 to-orange-100 rounded-full p-4 w-16 h-16 flex items-center justify-center mx-auto mb-6\"\n                        whileHover={{ \n                          rotate: 360,\n                          scale: 1.1\n                        }}\n                        transition={{ duration: 0.5 }}\n                      >\n                        <service.icon className=\"w-8 h-8 text-blue-600\" />\n                      </motion.div>\n                      <h3 className=\"font-spartan font-bold text-xl text-gray-900 mb-4\">\n                        {service.title}\n                      </h3>\n                      <p className=\"font-inter text-gray-600 leading-relaxed\">\n                        {service.description}\n                      </p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </motion.div>\n        </div>\n      </motion.section>\n\n      {/* Approach Section */}\n      <motion.section \n        className=\"py-20 bg-gradient-to-br from-gray-50 to-white\"\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.8 }}\n      >\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div \n            className=\"grid grid-cols-1 lg:grid-cols-3 gap-12\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {approach.map((item, index) => {\n              const ref = useRef(null);\n              const isInView = useInView(ref, { once: true, margin: \"-100px\" });\n              \n              return (\n                <motion.div \n                  key={index} \n                  ref={ref}\n                  className=\"relative\"\n                  variants={fadeInUp}\n                  whileHover={{\n                    scale: 1.02,\n                    rotateY: 10,\n                    rotateX: 5\n                  }}\n                  style={{\n                    transformStyle: \"preserve-3d\",\n                    perspective: \"1000px\"\n                  }}\n                >\n                  <motion.div \n                    className=\"absolute -top-4 -left-4 bg-gradient-to-r from-blue-500 to-orange-500 text-white w-12 h-12 rounded-full flex items-center justify-center font-bold text-lg\"\n                    initial={{ scale: 0, rotate: -180 }}\n                    animate={isInView ? { scale: 1, rotate: 0 } : { scale: 0, rotate: -180 }}\n                    transition={{ delay: index * 0.2, type: \"spring\", stiffness: 200 }}\n                    whileHover={{ \n                      scale: 1.2,\n                      rotate: 360,\n                      boxShadow: \"0 0 20px rgba(255, 123, 77, 0.5)\"\n                    }}\n                  >\n                    {item.step}\n                  </motion.div>\n                  <Card className=\"border-none shadow-lg hover:shadow-xl transition-all duration-300 pt-8\">\n                    <CardContent className=\"p-8\">\n                      <h3 className=\"font-spartan font-bold text-2xl text-gray-900 mb-3\">\n                        {item.title}\n                      </h3>\n                      <h4 className=\"font-inter font-semibold text-orange-600 mb-4\">\n                        {item.subtitle}\n                      </h4>\n                      <p className=\"font-inter text-gray-600 leading-relaxed\">\n                        {item.description}\n                      </p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </motion.div>\n        </div>\n      </motion.section>\n\n      {/* Team Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-6\">\n              Drive Media Behind <br />\n              <span className=\"bg-gradient-to-r from-blue-500 via-orange-500 to-blue-500 bg-clip-text text-transparent\">\n                Every Campaign\n              </span>\n            </h2>\n            <p className=\"font-inter text-gray-600 text-lg max-w-3xl mx-auto\">\n              Our diverse team of experts brings together years of experience in advertising, technology, and strategic consulting to deliver results that exceed expectations.\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {team.map((member, index) => (\n              <div key={index} className=\"relative\">\n                <div className=\"relative overflow-hidden rounded-2xl\">\n                  <img \n                    src={member.image}\n                    alt={member.name}\n                    className=\"w-full h-80 object-cover hover:scale-105 transition-transform duration-500\"\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\"></div>\n                  <div className=\"absolute bottom-6 left-6 text-white\">\n                    <h3 className=\"font-spartan font-bold text-2xl mb-2\">\n                      {member.name}\n                    </h3>\n                    <p className=\"font-inter text-gray-200 leading-relaxed\">\n                      {member.description}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Mission Section */}\n      <section className=\"py-20 bg-gradient-to-br from-blue-50 via-orange-50 to-blue-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-orange-500 to-blue-500 rounded-2xl p-8 text-white\">\n                <h3 className=\"font-spartan font-bold text-3xl mb-6\">\n                  Empowering Brands with <br />\n                  Powerful Advertising <br />\n                  Solutions\n                </h3>\n                <p className=\"font-inter text-orange-100 mb-8 leading-relaxed\">\n                  We transform creative visions into measurable business growth through strategic campaigns, innovative technology, and data-driven insights that resonate with your target audience.\n                </p>\n                <div className=\"grid grid-cols-2 gap-6\">\n                  <div className=\"text-center\">\n                    <div className=\"font-spartan font-bold text-3xl mb-1\">150%</div>\n                    <div className=\"font-inter text-sm text-white-400\">Average ROI Increase</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"font-spartan font-bold text-3xl mb-1\">85%</div>\n                    <div className=\"font-inter text-sm text-white-400\">Client Retention Rate</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div>\n              <h2 className=\"font-spartan font-bold text-4xl text-gray-900 mb-8\">\n                Our Mission & Values\n              </h2>\n              <p className=\"font-inter text-gray-600 text-lg mb-8 leading-relaxed\">\n                We believe in the power of authentic storytelling and innovative technology to create meaningful connections between brands and their audiences. Our commitment goes beyond just delivering campaigns – we build lasting partnerships that drive sustainable growth.\n              </p>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start\">\n                  <div className=\"bg-blue-100 rounded-full p-3 mr-4 mt-1\">\n                    <Heart className=\"w-6 h-6 text-blue-600\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-spartan font-bold text-lg mb-2 text-gray-900\">Authentic Partnerships</h3>\n                    <p className=\"font-inter text-gray-600\">Building genuine relationships based on trust, transparency, and shared success.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"bg-blue-100 rounded-full p-3 mr-4 mt-1\">\n                    <Rocket className=\"w-6 h-6 text-blue-600\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-spartan font-bold text-lg mb-2 text-gray-900\">Innovation First</h3>\n                    <p className=\"font-inter text-gray-600\">Leveraging cutting-edge technology and creative thinking to stay ahead of market trends.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start\">\n                  <div className=\"bg-blue-100 rounded-full p-3 mr-4 mt-1\">\n                    <TrendingUp className=\"w-6 h-6 text-blue-600\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-spartan font-bold text-lg mb-2 text-gray-900\">Measurable Impact</h3>\n                    <p className=\"font-inter text-gray-600\">Delivering data-driven results that translate into real business growth and market success.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Recognition Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-gradient-to-r from-blue-500 to-orange-500 rounded-3xl p-12 text-white text-center\">\n            <div className=\"flex flex-col md:flex-row items-center justify-center gap-8 col-lg-12\">\n              <div className=\"bg-white rounded-2xl p-6 flex-shrink-0\">\n                <div className=\"w-20 h-20 flex items-center justify-center\">\n                  <img \n                    src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/service/Dish-competition-logo.png\" \n                    alt=\"DISH Competition Logo\" \n                    className=\"max-w-full max-h-full object-contain\"\n                  />\n                </div>\n              </div>\n              <div className=\"text-center md:text-left col-lg-8\">\n                <h2 className=\"font-spartan font-bold text-4xl mb-4\">\n                  Proud Finalists of the DISH Competition 2024\n                </h2>\n                <p className=\"font-inter text-xl text-white-100 mb-4\">\n                  TamuBoost Clusters: Recognized among the top 15 innovative solutions for tackling global challenges\n                </p>\n                <p className=\"text-xl text-white-100 mb-4\"> TamuBoost Clusters – A nutritious, locally sourced school snack addressing malnutrition, improving children’s health and cognitive development,  was recognized for its role in \n                  promoting healthy diets and well-being in underserved communities. </p>\n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center md:justify-start\">\n                  <div className=\"bg-white/20 rounded-lg px-4 py-2\">\n                    <a href=\"https://youtu.be/rasf2fiNbZQ\" className=\"font-inter font-semibold\">Watch Now <ArrowRight className=\"inline-block ml-2 w-5 h-5\" /></a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-br from-blue-900 via-orange-900 to-blue-900 relative overflow-hidden\">\n        {/* Background decorations */}\n        <div className=\"absolute top-0 left-0 w-full h-full\">\n          <div className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-gradient-to-r from-blue-400/10 to-orange-400/10 rounded-full blur-3xl\"></div>\n          <div className=\"absolute bottom-1/4 right-1/4 w-80 h-80 bg-gradient-to-r from-blue-400/10 to-orange-400/10 rounded-full blur-3xl\"></div>\n        </div>\n        \n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-spartan font-bold text-4xl lg:text-6xl text-white mb-8\">\n            Ready to Transform <br />\n            <span className=\"bg-gradient-to-r from-blue-400 via-orange-400 to-blue-400 bg-clip-text text-transparent\">\n              Your Brand Story?\n            </span>\n          </h2>\n          <p className=\"font-inter text-gray-300 text-xl mb-12 max-w-4xl mx-auto leading-relaxed\">\n            Let's collaborate to create powerful advertising solutions that drive meaningful growth, build lasting connections, and establish your brand as an industry leader.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-6 justify-center items-center\">\n            <Link href=\"/contact\">\n            <Button className=\"bg-gradient-to-r from-blue-500 to-orange-500 text-white font-inter font-bold px-10 py-4 rounded-xl hover:shadow-2xl transition-all duration-300 hover:scale-105\">\n              Start Your Journey\n              <ArrowRight className=\"ml-2 w-5 h-5\" />\n            </Button>\n              </Link>\n            <Link href=\"/home\">\n            <Button variant=\"outline\" className=\"border-2 border-gray-400 text-gray-800 hover:border-white hover:text-gray-900 px-10 py-4 rounded-xl font-inter font-bold backdrop-blur-sm\">\n              View Case Studies\n            </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </motion.div>\n  );\n}","size_bytes":27111},"client/src/pages/brand-experience.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Link } from \"wouter\";\nimport { motion, useScroll, useTransform, useInView } from \"framer-motion\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { \n  ArrowRight, \n  CheckCircle, \n  Users, \n  Eye,\n  Heart,\n  Lightbulb,\n  Target,\n  Award,\n  Globe,\n  Palette,\n  Brain,\n  Rocket,\n  Star,\n  ChevronDown,\n  Plus,\n  Minus,\n  Mail,\n  Phone,\n  Sparkles,\n  Smartphone,\n  Monitor,\n  Headphones,\n  Zap\n} from \"lucide-react\";\n\nexport default function BrandExperience() {\n  const containerRef = useRef(null);\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start start\", \"end start\"]\n  });\n  \n  const backgroundY = useTransform(scrollYProgress, [0, 1], [\"0%\", \"50%\"]);\n  const textY = useTransform(scrollYProgress, [0, 1], [\"0%\", \"100%\"]);\n  \n  // Glitch effect state\n  const [glitching, setGlitching] = useState(false);\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      setGlitching(true);\n      setTimeout(() => setGlitching(false), 150);\n    }, 4000);\n    return () => clearInterval(interval);\n  }, []);\n  \n  const [activeAccordion, setActiveAccordion] = useState<number | null>(null);\n  \n  // Animation variants\n  const fadeInUp = {\n    initial: { opacity: 0, y: 60 },\n    animate: { opacity: 1, y: 0 },\n    transition: { duration: 0.6, ease: \"easeOut\" }\n  };\n  \n  const staggerContainer = {\n    animate: {\n      transition: {\n        staggerChildren: 0.15\n      }\n    }\n  };\n  \n  const glitchAnimation = {\n    x: glitching ? [0, -3, 3, -2, 2, 0] : 0,\n    textShadow: glitching \n      ? [\n        \"0 0 0 transparent\",\n        \"3px 0 0 #ff7849, -3px 0 0 #1e40af\",\n        \"-3px 0 0 #ff7849, 3px 0 0 #1e40af\",\n        \"3px 0 0 #ff7849, -3px 0 0 #1e40af\",\n        \"0 0 0 transparent\"\n      ]\n      : \"0 0 0 transparent\",\n    transition: { duration: 0.15 }\n  };\n\n  const process = [\n    {\n      step: \"1\",\n      title: \"Discovery\",\n      description: \"We begin with comprehensive research to understand your market, competitors, and target audience, uncovering unique opportunities for your brand experience strategy.\"\n    },\n    {\n      step: \"2\", \n      title: \"Conceptualization\",\n      description: \"Our creative team develops innovative experience concepts that align with your brand vision and create meaningful emotional connections with your audience.\"\n    },\n    {\n      step: \"3\",\n      title: \"Build the System\",\n      description: \"We implement cohesive brand experience systems that deliver consistent, memorable interactions across all customer touchpoints and channels.\"\n    }\n  ];\n\n  const differentiators = [\n    {\n      title: \"Strategic Storytelling\",\n      description: \"We craft compelling brand narratives that resonate deeply with your audience, creating authentic emotional connections that drive loyalty and engagement.\",\n      icon: Lightbulb\n    },\n    {\n      title: \"System Thinking\",\n      description: \"Our holistic approach ensures every brand experience element works together harmoniously, creating seamless journeys that amplify your brand's impact.\",\n      icon: Brain\n    },\n    {\n      title: \"Digital Innovation\",\n      description: \"We leverage cutting-edge technology and digital platforms to bring your brand experience to life across all channels with precision and creativity.\",\n      icon: Rocket\n    }\n  ];\n\n  const brandHighlights = [\n    {\n      title: \"Brand Strategy\",\n      description: \"Comprehensive brand positioning and strategic experience planning\",\n      icon: CheckCircle,\n      color: \"from-orange-100 to-orange-200\",\n      iconColor: \"text-orange-600\"\n    },\n    {\n      title: \"Visual Experience\", \n      description: \"Distinctive visual systems and immersive brand environments\",\n      icon: CheckCircle,\n      color: \"from-blue-100 to-blue-200\", \n      iconColor: \"text-blue-600\"\n    },\n    {\n      title: \"Customer Journey\",\n      description: \"Seamless experiences across all customer touchpoints and interactions\",\n      icon: CheckCircle,\n      color: \"from-orange-100 to-blue-200\",\n      iconColor: \"text-orange-600\"\n    }\n  ];\n\n   const benefits = [\n    {\n      title: \"Deeper Engagement\",\n      description: \"Interactive experiences increase dwell time by an average of 60%.\",\n      icon: Eye\n    },\n    {\n      title: \"Stronger Loyalty\",\n      description: \"Personalized journeys foster emotional bonds, boosting repeat purchase rates by up to 35%.\",\n      icon: Heart\n    },\n    {\n      title: \"Data-Backed Optimization\",\n      description: \"Real-time analytics let you pivot mid-campaign—maximizing ROI and reducing wasted budget.\",\n      icon: Target\n    },\n    {\n      title: \"Cross-Channel Consistency\",\n      description: \"Seamless handoffs between in-store, mobile, and web interactions create unified brand impressions.\",\n      icon: Globe\n    },\n    {\n      title: \"Scalable Impact\",\n      description: \"From local activations to global rollouts, our modular frameworks adapt to any budget and geography.\",\n      icon: Zap\n    }\n  ];\n\n  const toggleAccordion = (index: number) => {\n    setActiveAccordion(activeAccordion === index ? null : index);\n  };\n\n  return (\n    <motion.div \n      ref={containerRef}\n      className=\"min-h-screen bg-white\"\n      style={{ \n        scrollBehavior: \"smooth\"\n      }}\n    >\n      <Navigation />\n\n      {/* Hero Section - Dark with Brand Experience theme */}\n      <motion.section \n        className=\"bg-white py-20 text-white relative overflow-hidden\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1.2 }}\n      >\n        {/* Background decorative elements with parallax */}\n        <motion.div \n          className=\"absolute top-20 left-10 w-40 h-40 bg-gradient-to-br from-orange-500/20 to-blue-500/20 rounded-full blur-3xl\"\n          style={{ y: backgroundY }}\n          animate={{\n            scale: [1, 1.2, 1],\n            opacity: [0.3, 0.6, 0.3]\n          }}\n          transition={{\n            duration: 4,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n        ></motion.div>\n        <motion.div \n          className=\"absolute bottom-20 right-10 w-32 h-32 bg-gradient-to-br from-blue-500/20 to-orange-500/20 rounded-full blur-3xl\"\n          style={{ y: textY }}\n          animate={{\n            scale: [1, 1.3, 1],\n            opacity: [0.4, 0.7, 0.4]\n          }}\n          transition={{\n            duration: 5,\n            repeat: Infinity,\n            ease: \"easeInOut\",\n            delay: 1\n          }}\n        ></motion.div>\n        \n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {/* Left Content */}\n            <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.8 }}>\n              \n               <div className=\"flex items-center mb-6 group\">\n                <div className=\"bg-orange-100 p-2 rounded-lg mr-3 group-hover:rotate-12 transition-transform duration-300\">\n                  <Award className=\"w-6 h-6 text-orange-500\" />\n                </div>\n                <span className=\"font-inter text-orange-500 font-semibold tracking-wide\">Brand Experience</span>\n              </div>\n\n              <h1 className=\"font-bold text-4xl lg:text-5xl xl:text-6xl leading-tight mb-6 text-gray-900\">\n              Brand Experiences That Resonate with <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> Modern Consumers</span> \n              </h1>\n\n              <p className=\"text-gray-600 text-lg mb-8 leading-relaxed max-w-lg\">\n              Transform your brand identity with innovative experience solutions that capture attention, build trust, and drive meaningful engagement across all touchpoints.          \n                  </p>\n\n               <div className=\"flex flex-col sm:flex-row gap-4\">\n                <motion.div\n                                initial={{ opacity: 0, y: 20 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                transition={{ delay: 0.9 }}\n                                whileHover={{ \n                                  scale: 1.05,\n                                  rotateY: 5,\n                                  rotateX: 5\n                                }}\n                                whileTap={{ scale: 0.95 }}\n                              >\n                                <Link href=\"/contact\">\n                                  <Button \n                                    className=\"bg-gradient-to-r from-orange-500 to-blue-500 text-white hover:from-orange-600 hover:to-blue-600 px-8 py-4 rounded-xl font-inter font-bold transition-all duration-300\"\n                                    data-testid=\"button-get-started\"\n                                  >\n                                    Get Started\n                                    <motion.div\n                                      animate={{ x: [0, 5, 0] }}\n                                      transition={{ duration: 1.5, repeat: Infinity }}\n                                    >\n                                      <ArrowRight className=\"ml-2 w-5 h-5\" />\n                                    </motion.div>\n                                  </Button>\n                                </Link>\n                              </motion.div>\n                <motion.div\n                                initial={{ opacity: 0, y: 20 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                transition={{ delay: 0.9 }}\n                                whileHover={{ \n                                  scale: 1.05,\n                                  rotateY: 5,\n                                  rotateX: 5\n                                }}\n                                whileTap={{ scale: 0.95 }}\n                              >\n                <Link href=\"/contact\">\n                  <Button variant=\"outline\" className=\"border-2 border-gray-300 text-gray-700 hover:bg-gray-50 hover:border-orange-500 hover:text-orange-500 px-8 py-3 rounded-lg font-inter font-semibold transition-all duration-300 hover:shadow-md\">\n                    Get a Quote\n                  </Button>\n                </Link>\n                </motion.div>\n              </div>\n            </motion.div>\n            \n            <motion.div \n              className=\"relative\"\n              initial={{ opacity: 0, x: 50, rotateY: -15 }}\n              animate={{ opacity: 1, x: 0, rotateY: 0 }}\n              transition={{ duration: 1, delay: 0.5 }}\n              whileHover={{\n                rotateY: 10,\n                rotateX: 5,\n                scale: 1.02\n              }}\n              style={{\n                transformStyle: \"preserve-3d\",\n                perspective: \"1000px\"\n              }}\n            >\n              <motion.div \n                className=\"bg-blue-800/50 backdrop-blur-sm rounded-2xl p-8 shadow-2xl\"\n                whileHover={{\n                  boxShadow: \"0 40px 80px rgba(0,0,0,0.3)\",\n                  borderColor: \"rgba(255, 120, 73, 0.3)\"\n                }}\n                transition={{ duration: 0.3 }}\n              >\n                <motion.img \n                  src=\"https://media.istockphoto.com/id/961236600/photo/customer-diagram-on-blackboard.jpg?s=612x612&w=0&k=20&c=Fjt3U47jHMaWq_vWprJ5uIK43vyUotmOTyEko-gbxt0=\" \n                  alt=\"Brand design workspace with creative materials and design tools\" \n                  className=\"rounded-xl w-full h-auto\"\n                  whileHover={{ scale: 1.05 }}\n                  transition={{ duration: 0.4 }}\n                />\n                <motion.div \n                  className=\"absolute -top-4 -right-4 bg-gradient-to-r from-orange-500 to-blue-500 rounded-full p-3 shadow-lg\"\n                  animate={{\n                    rotate: [0, 360],\n                    scale: [1, 1.1, 1]\n                  }}\n                  transition={{\n                    rotate: { duration: 8, repeat: Infinity, ease: \"linear\" },\n                    scale: { duration: 2, repeat: Infinity, ease: \"easeInOut\" }\n                  }}\n                  whileHover={{\n                    scale: 1.2,\n                    boxShadow: \"0 0 20px rgba(255, 120, 73, 0.6)\"\n                  }}\n                >\n                  <Sparkles className=\"w-6 h-6 text-white\" />\n                </motion.div>\n              </motion.div>\n            </motion.div>\n          </div>\n        </div>\n      </motion.section>\n\n\n\n      {/* Branding That Demands Attention Section */}\n      <motion.section \n        className=\"py-20 bg-white\"\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.8 }}\n      >\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-8\">\n            Branding That Demands Attention\n          </h2>\n          <p className=\"font-inter text-gray-600 text-lg leading-relaxed mb-12 max-w-3xl mx-auto\">\n            Our strategic approach to brand experience combines creativity with data-driven insights to create memorable journeys that resonate with your audience. We don't just design touchpoints—we craft complete brand ecosystems that tell your story across every customer interaction.\n          </p>\n           </div>\n          {/* Key Brand Highlights */}\n         <div className=\"max-w-6xl mx-auto px-4 sm:px-8 lg:px-12\">\n          <div className=\"relative bg-white rounded-3xl shadow-2xl overflow-hidden group\">\n            <img \n              src=\"https://images.unsplash.com/photo-1652736719079-b12b89b8ffa0?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8QnJhbmRpbmclMjBUaGF0JTIwRGVtYW5kcyUyMEF0dGVudGlvbnxlbnwwfHwwfHx8MA%3D%3D\" \n              alt=\"Premium brand product showcase featuring creative design elements\" \n              className=\"w-full h-96 object-cover transition-transform duration-700 group-hover:scale-105\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-r from-black/60 via-transparent to-black/60\"></div>\n            \n            {/* Floating brand indicators */}\n            <div className=\"absolute top-8 left-8 bg-white/10 backdrop-blur-sm rounded-full px-4 py-2 border border-white/20\">\n              <span className=\"font-inter text-white text-sm font-medium\">✓ Design Thinking</span>\n            </div>\n            <div className=\"absolute top-8 right-8 bg-white/10 backdrop-blur-sm rounded-full px-4 py-2 border border-white/20\">\n              <span className=\"font-inter text-white text-sm font-medium\">✓ Brand Experience</span>\n            </div>\n            <div className=\"absolute bottom-16 right-8 bg-white/10 backdrop-blur-sm rounded-full px-4 py-2 border border-white/20\">\n              <span className=\"font-inter text-white text-sm font-medium\">✓ Digital Integration</span>\n            </div>\n            \n            <div className=\"absolute bottom-8 left-8 text-white\">\n              <h3 className=\"font-spartan font-bold text-2xl mb-2\">\n                Premium Brand Excellence\n              </h3>\n              <p className=\"font-inter text-gray-200\">\n                Crafting distinctive brand experiences that stand out in competitive markets\n              </p>\n            </div>\n          </div>\n        </div>       \n      </motion.section>\n\n\n       {/* Brand Experience Section */}\n            <motion.section \n        className=\"py-20 bg-white\"\n        initial={{ opacity: 0 }}\n        whileInView={{ opacity: 1 }}\n        viewport={{ once: true }}\n        transition={{ duration: 0.8 }}\n      >\n              <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n                  <div>\n                    <h2 className=\"font-spartan font-bold text-4xl text-gray-900 mb-8\">\n                      Brand Experience\n                    </h2>\n                    <p className=\"font-inter text-gray-600 text-lg mb-6 leading-relaxed\">\n                      We believe branding should be more than a visual—it should be a multi-sensory journey that lives in the mind long after the moment has passed. By weaving in sensory integration—from evocative soundscapes and subtle haptic feedback to dynamic visuals—we engage audiences on every level.\n                    </p>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"flex items-center\">\n                        <div className=\"bg-orange-600 rounded-full p-2 mr-3\">\n                          <Headphones className=\"w-4 h-4 text-white\" />\n                        </div>\n                        <span className=\"font-inter text-sm\">Multi-Sensory</span>\n                      </div>\n                      <div className=\"flex items-center\">\n                        <div className=\"bg-blue-600 rounded-full p-2 mr-3\">\n                          <Smartphone className=\"w-4 h-4 text-white\" />\n                        </div>\n                        <span className=\"font-inter text-sm\">AI-Driven</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"relative\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1558655146-d09347e92766?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                      alt=\"Immersive brand experience\" \n                      className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                    />\n                    <div className=\"absolute -top-6 -right-6 bg-gradient-to-r from-blue-600 to-orange-600 rounded-2xl p-4 shadow-lg\">\n                      <Eye className=\"w-8 h-8 text-white\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.section>      \n\n     \n      {/* Our Brand Expeience Process */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-8\">\n              Our Brand Experience Process\n            </h2>\n            <p className=\"font-inter text-gray-600 text-lg max-w-3xl mx-auto\">\n              Our proven methodology ensures every brand experience we create is strategic, memorable, and perfectly aligned with your business goals and customer expectations.\n            </p>\n          </div>\n          \n          <motion.div \n            className=\"grid grid-cols-1 md:grid-cols-3 gap-12\"\n            variants={staggerContainer}\n            initial=\"initial\"\n            whileInView=\"animate\"\n            viewport={{ once: true }}\n          >\n            {process.map((step, index) => {\n              const ref = useRef(null);\n              const isInView = useInView(ref, { once: true, margin: \"-100px\" });\n              \n              return (\n                <motion.div \n                  key={index} \n                  ref={ref}\n                  className=\"text-center relative\" \n                  data-testid={`process-step-${index}`}\n                  variants={fadeInUp}\n                  whileHover={{\n                    scale: 1.02,\n                    rotateY: 8,\n                    rotateX: 5\n                  }}\n                  style={{\n                    transformStyle: \"preserve-3d\",\n                    perspective: \"1000px\"\n                  }}\n                >\n                  {/* Step Number Circle */}\n                  <motion.div \n                    className=\"bg-gradient-to-r from-orange-500 to-blue-500 text-white w-16 h-16 rounded-full flex items-center justify-center font-bold text-2xl mx-auto mb-6 shadow-lg\"\n                    initial={{ scale: 0, rotate: -180 }}\n                    animate={isInView ? { scale: 1, rotate: 0 } : { scale: 0, rotate: -180 }}\n                    transition={{ delay: index * 0.2, type: \"spring\", stiffness: 200 }}\n                    whileHover={{\n                      scale: 1.2,\n                      rotate: 360,\n                      boxShadow: \"0 0 20px rgba(255, 120, 73, 0.5)\"\n                    }}\n                  >\n                    {step.step}\n                  </motion.div>\n                  \n                  {/* Connector Line - hide on last item */}\n                  {index < process.length - 1 && (\n                    <motion.div \n                      className=\"hidden md:block absolute top-8 left-1/2 w-full h-0.5 bg-gray-200 transform translate-x-8 -z-10\"\n                      initial={{ scaleX: 0 }}\n                      animate={isInView ? { scaleX: 1 } : { scaleX: 0 }}\n                      transition={{ delay: index * 0.3 + 0.5, duration: 0.8 }}\n                      style={{ originX: 0 }}\n                    ></motion.div>\n                  )}\n                  \n                  <motion.h3 \n                    className=\"font-spartan font-bold text-2xl text-gray-900 mb-4\"\n                  >\n                    {step.title}\n                  </motion.h3>\n                  <p className=\"font-inter text-gray-600 leading-relaxed\">\n                    {step.description}\n                  </p>\n                </motion.div>\n              );\n            })}\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Brand Design Differentiator Section */}\n      <section className=\"py-20 bg-gradient-to-br from-gray-50 to-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"relative\">\n              <img \n                src=\"https://images.unsplash.com/photo-1600880292203-757bb62b4baf?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=500\" \n                alt=\"Brand design workspace featuring creative strategy materials and design tools\" \n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n              />\n              <div className=\"absolute -bottom-6 -left-6 bg-gradient-to-r from-orange-500 to-blue-500 rounded-2xl p-4 shadow-lg\">\n                <Palette className=\"w-8 h-8 text-white\" />\n              </div>\n              {/* Floating experience indicators */}\n              <div className=\"absolute top-6 right-6 bg-white rounded-full p-3 shadow-lg\">\n                <Sparkles className=\"w-6 h-6 text-orange-500\" />\n              </div>\n            </div>\n            <div>\n              <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-8\">\n                Brand Experience Differentiator\n              </h2>\n              \n              <motion.div \n                className=\"space-y-8\"\n                variants={staggerContainer}\n                initial=\"initial\"\n                whileInView=\"animate\"\n                viewport={{ once: true }}\n              >\n                {differentiators.map((item, index) => (\n                  <motion.div \n                    key={index} \n                    className=\"flex items-start\" \n                    data-testid={`differentiator-${index}`}\n                    variants={fadeInUp}\n                    whileHover={{\n                      x: 10,\n                      scale: 1.02\n                    }}\n                  >\n                    <motion.div \n                      className=\"bg-gradient-to-br from-orange-100 to-blue-100 rounded-full p-3 mr-4 mt-1 flex-shrink-0\"\n                      whileHover={{\n                        rotate: 360,\n                        scale: 1.1\n                      }}\n                      transition={{ duration: 0.5 }}\n                    >\n                      <item.icon className=\"w-6 h-6 text-orange-600\" />\n                    </motion.div>\n                    <div>\n                      <h3 className=\"font-spartan font-bold text-xl text-gray-900 mb-2\">\n                        {item.title}\n                      </h3>\n                      <p className=\"font-inter text-gray-600 leading-relaxed\">\n                        {item.description}\n                      </p>\n                    </div>\n                  </motion.div>\n                ))}\n              </motion.div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Immersive Campaigns Section */}\n            <section className=\"py-20 bg-white\">\n              <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n                  <div>\n                    <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900\">\n                      Immersive Campaigns.\n                    </h2>\n                   <p className=\"font-inter text-gray-600 text-lg mb-8 leading-relaxed\">\n                      Engage audiences with memorable, participatory experiences\n                    </p>\n                    <p className=\"font-inter text-gray-600 text-lg mb-6 leading-relaxed\">\n                      Our immersive campaigns break past passive advertising by inviting audiences to interact, explore, and play. Augmented reality pop-ups let customers bring products to life in their own space—no app download required, just a simple scan.\n                    </p>\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div className=\"flex items-center\">\n                        <div className=\"bg-orange-600 rounded-full p-2 mr-3\">\n                          <Sparkles className=\"w-4 h-4 text-white\" />\n                        </div>\n                        <span className=\"font-inter text-sm\">AR Experiences</span>\n                      </div>\n                      <div className=\"flex items-center\">\n                        <div className=\"bg-blue-600 rounded-full p-2 mr-3\">\n                          <Users className=\"w-4 h-4 text-white\" />\n                        </div>\n                        <span className=\"font-inter text-sm\">Virtual Events</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"relative\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1553877522-43269d4ea984?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                      alt=\"Immersive campaign experience\" \n                      className=\"rounded-2xl shadow-2xl w-full h-auto\"\n                    />\n                    <div className=\"absolute -top-6 -right-6 bg-gradient-to-r from-purple-600 to-pink-600 rounded-2xl p-4 shadow-lg\">\n                      <Zap className=\"w-8 h-8 text-white\" />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </section>\n      \n            {/* Benefits Section */}\n            <section className=\"py-20 bg-gray-50\">\n              <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"text-center mb-16\">\n                  <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-6\">\n                    Key Benefits of Leveraging Brand Experience Solutions\n                  </h2>\n                  <p className=\"font-inter text-xl text-gray-600 max-w-3xl mx-auto\">\n                    Why Choose Gill Technologies for Your Brand Experience Needs?\n                  </p>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                  {benefits.map((benefit, index) => (\n                    <Card key={index} className=\"border-none shadow-lg hover:shadow-xl transition-all duration-300 group\">\n                      <CardContent className=\"p-8 text-center\">\n                        <div className=\"bg-gradient-to-r from-blue-600 to-orange-600 p-4 rounded-xl inline-block mb-6\">\n                          <benefit.icon className=\"w-8 h-8 text-white\" />\n                        </div>\n                        <h3 className=\"font-spartan font-bold text-xl mb-4 group-hover:text-blue-600 transition-colors\">\n                          {benefit.title}\n                        </h3>\n                        <p className=\"font-inter text-gray-600 leading-relaxed\">\n                          {benefit.description}\n                        </p>\n                      </CardContent>\n                    </Card>\n                  ))}\n                </div>\n              </div>\n            </section>\n      \n            {/* CTA Section */}\n            <section className=\"py-20 bg-gradient-to-r from-blue-600 via-orange-600 to-blue-500\">\n              <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n                <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-white mb-6\">\n                  Let's craft your next immersive journey together\n                </h2>\n                <p className=\"font-inter text-white-600 text-xl mb-10 max-w-3xl mx-auto\">\n                  Ready to create brand experiences that captivate, engage, and inspire lasting connections with your audience?\n                </p>\n                <Link href=\"/contact\">\n                <Button className=\"bg-white text-blue-600 hover:bg-gray-100 px-10 py-4 rounded-xl font-inter font-bold\">\n                  Get in Touch for a Brand Experience Consultation\n                  <ArrowRight className=\"ml-2 w-5 h-5\" />\n                </Button>\n                  </Link>\n              </div>\n            </section>\n\n      <Footer />\n    </motion.div>\n  );\n}","size_bytes":29890},"client/src/pages/brand-strategy.tsx":{"content":"\"use client\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport Navigation from \"@/components/navigation\"\nimport Footer from \"@/components/footer\"\nimport { Link } from \"wouter\"\nimport { motion, useScroll, useTransform } from \"framer-motion\"\nimport { useRef } from \"react\"\nimport {\n  ArrowRight,\n  Target,\n  TrendingUp,\n  MessageCircle,\n  Star,\n  Palette,\n  BarChart3,\n  CheckCircle,\n  Award,\n  Lightbulb,\n  Globe,\n  Rocket,\n  Brain,\n  Sparkles,\n  ArrowUpRight,\n  Quote,\n  Clock,\n  ThumbsUp,\n} from \"lucide-react\"\n\nexport default function BrandStrategy() {\n  const containerRef = useRef(null)\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start start\", \"end start\"],\n  })\n\n  const y = useTransform(scrollYProgress, [0, 1], [\"0%\", \"50%\"])\n  const opacity = useTransform(scrollYProgress, [0, 0.5], [1, 0])\n\n  const brands = [\n    {\n      name: \"PepsiCo\",\n      src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/pepsico.png\",\n    },\n    {\n      name: \"BritBox\",\n      src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/BritBox.png\",\n    },\n    { name: \"Mars\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Mars.png\" },\n    {\n      name: \"NTUC Singapore\",\n      src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/NTUC-Singapore.png\",\n    },\n    {\n      name: \"Bimbo Canada\",\n      src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Bimbo-Canada.png\",\n    },\n    {\n      name: \"Burlington\",\n      src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Burlington.png\",\n    },\n    {\n      name: \"Ricola\",\n      src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Ricola-Candies.png\",\n    },\n    {\n      name: \"Nike China\",\n      src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Nike-China.png\",\n    },\n  ]\n\n  const services = [\n    {\n      title: \"Brand Strategy & Positioning\",\n      description:\n        \"Comprehensive strategic foundation that defines your brand's unique position in the market and creates lasting competitive advantage.\",\n      icon: Target,\n      gradient: \"from-blue-500 to-orange-400\",\n      features: [\n        \"Market Research & Analysis\",\n        \"Competitive Intelligence\",\n        \"Brand Architecture Design\",\n        \"Strategic Roadmap Development\",\n      ],\n    },\n    {\n      title: \"Visual Identity & Design\",\n      description:\n        \"Complete visual identity systems that capture your brand essence and create memorable experiences across all touchpoints.\",\n      icon: Palette,\n      gradient: \"from-orange-500 to-blue-400\",\n      features: [\n        \"Logo & Visual Identity\",\n        \"Brand Guidelines Creation\",\n        \"Color & Typography Systems\",\n        \"Digital Asset Libraries\",\n      ],\n    },\n    {\n      title: \"Brand Voice & Messaging\",\n      description:\n        \"Authentic brand voice development and strategic messaging frameworks that resonate with your target audience.\",\n      icon: MessageCircle,\n      gradient: \"from-blue-500 to-orange-400\",\n      features: [\"Brand Voice Development\", \"Messaging Architecture\", \"Content Strategy\", \"Copywriting Excellence\"],\n    },\n    {\n      title: \"Digital Brand Experience\",\n      description:\n        \"Comprehensive digital brand presence that ensures consistency and impact across all online platforms.\",\n      icon: Globe,\n      gradient: \"from-orange-500 to-blue-400\",\n      features: [\n        \"Digital Brand Guidelines\",\n        \"Website Brand Integration\",\n        \"Social Media Strategy\",\n        \"Digital Campaign Design\",\n      ],\n    },\n    {\n      title: \"Brand Innovation & Growth\",\n      description:\n        \"Forward-thinking brand strategies that drive innovation and sustainable growth in evolving markets.\",\n      icon: Rocket,\n      gradient: \"from-blue-500 to-orange-400\",\n      features: [\"Innovation Strategy\", \"Growth Planning\", \"Market Expansion\", \"Future-Proofing\"],\n    },\n    {\n      title: \"Brand Performance Analytics\",\n      description: \"Data-driven insights and performance measurement to optimize brand strategy and maximize ROI.\",\n      icon: BarChart3,\n      gradient: \"from-orange-500 to-blue-400\",\n      features: [\"Brand Health Tracking\", \"Performance Analytics\", \"ROI Measurement\", \"Strategic Optimization\"],\n    },\n  ]\n\n  const process = [\n    {\n      step: \"01\",\n      title: \"Discovery & Research\",\n      description:\n        \"Deep dive into your market, competitors, and audience to uncover strategic opportunities and insights.\",\n      icon: Brain,\n    },\n    {\n      step: \"02\",\n      title: \"Strategy Development\",\n      description:\n        \"Crafting comprehensive brand strategies with clear positioning, messaging, and implementation roadmaps.\",\n      icon: Lightbulb,\n    },\n    {\n      step: \"03\",\n      title: \"Creative Execution\",\n      description:\n        \"Bringing your brand to life through compelling visual identity, authentic voice, and cohesive experiences.\",\n      icon: Sparkles,\n    },\n    {\n      step: \"04\",\n      title: \"Launch & Optimization\",\n      description:\n        \"Strategic brand rollout with continuous monitoring, performance tracking, and ongoing optimization.\",\n      icon: TrendingUp,\n    },\n  ]\n\n  const achievements = [\n    {\n      number: \"100+\",\n      label: \"Brands Transformed\",\n      description: \"Successful brand transformations worldwide\",\n      icon: Award,\n    },\n    {\n      number: \"85%\",\n      label: \"Client Satisfaction\",\n      description: \"Exceptional results and partnerships\",\n      icon: ThumbsUp,\n    },\n    { number: \"3+\", label: \"Years Experience\", description: \"Decades of proven expertise\", icon: Clock },\n    { number: \"100+\", label: \"Brand Reach\", description: \"Global audience impact\", icon: Globe },\n  ]\n\n  const testimonials = [\n    {\n      name: \"CEO\",\n      role: \"Burlington\",\n      content:\n        \"Gill Technologies completely revolutionized our brand strategy. Their data-driven approach and creative excellence helped us achieve 300% growth in brand recognition within 18 months.\",\n      avatar: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Burlington.png?height=60&width=60&text=SM\",\n      rating: 5,\n      company: \"Burlington\",\n    },\n    {\n      name: \"CEO\",\n      role: \"Ricola Candies\",\n      content:\n        \"The strategic insights and creative execution exceeded our expectations. They didn't just rebrand us – they repositioned us as industry leaders.\",\n      avatar: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Ricola-Candies.png?height=60&width=60&text=DC\",\n      rating: 5,\n      company: \"Ricola Candies\",\n    },\n    {\n      name: \"BritBox\",\n      role: \"VP Marketing, BritBox\",\n      content:\n        \"Working with Gill Technologies was transformative. Their comprehensive approach helped us build a brand that truly connects with our customers and drives measurable business growth.\",\n      avatar: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/BritBox.png?height=60&width=60&text=MR\",\n      rating: 5,\n      company: \"BritBox\",\n    },\n  ]\n\n  const caseStudies = [\n    {\n      title: \"Fortune 500 Digital Transformation\",\n      category: \"Brand Repositioning\",\n      description: \"Complete brand overhaul resulting in 40% increase in market share and $50M revenue growth.\",\n      image: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/hero/brand-strategy-hero.avif?height=300&width=400&text=Case+Study+1\",\n      results: [\"20% Market Share Increase\", \"$10M Revenue Growth\", \"65% Brand Recognition Lift\"],\n      industry: \"Technology\",\n    },\n    {\n      title: \"Startup to Unicorn Journey\",\n      category: \"Brand Building\",\n      description: \"Strategic brand development that supported Series A to Unicorn status in 24 months.\",\n      image: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/hero/experience-hero.avif?height=300&width=400&text=Case+Study+2\",\n      results: [\"Unicorn Valuation\", \"500% User Growth\", \"Global Market Entry\"],\n      industry: \"FinTech\",\n    },\n    {\n      title: \"Retail Brand Renaissance\",\n      category: \"Brand Revitalization\",\n      description: \"Heritage brand modernization that increased customer loyalty by 60% and sales by 35%.\",\n      image: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/service/image-three.avif?height=300&width=400&text=Case+Study+3\",\n      results: [\"60% Loyalty Increase\", \"35% Sales Growth\", \"Award-Winning Campaign\"],\n      industry: \"Retail\",\n    },\n  ]\n\n  return (\n    <div className=\"min-h-screen bg-white\" ref={containerRef}>\n      <Navigation />\n\n      {/* Hero Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            {/* Left Content */}\n            <motion.div initial={{ opacity: 0, x: -50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.8 }}>\n              \n               <div className=\"flex items-center mb-6 group\">\n                <div className=\"bg-orange-100 p-2 rounded-lg mr-3 group-hover:rotate-12 transition-transform duration-300\">\n                  <Target className=\"w-6 h-6 text-orange-500\" />\n                </div>\n                <span className=\"font-inter text-orange-500 font-semibold tracking-wide\">Brand Strategy</span>\n              </div>\n\n              <h1 className=\"font-bold text-4xl lg:text-5xl xl:text-6xl leading-tight mb-6 text-gray-900\">\n                Building a strong brand starts with a <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> clear</span> strategy \n              </h1>\n\n              <p className=\"text-gray-600 text-lg mb-8 leading-relaxed max-w-lg\">\n              Whether you're launching something new or refining your brand, having a well-defined plan ensures consistency, builds trust, and sets you apart from the competition.          \n                  </p>\n\n               <div className=\"flex flex-col sm:flex-row gap-4\">\n                <motion.div\n                                initial={{ opacity: 0, y: 20 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                transition={{ delay: 0.9 }}\n                                whileHover={{ \n                                  scale: 1.05,\n                                  rotateY: 5,\n                                  rotateX: 5\n                                }}\n                                whileTap={{ scale: 0.95 }}\n                              >\n                                <Link href=\"/contact\">\n                                  <Button \n                                    className=\"bg-gradient-to-r from-orange-500 to-blue-500 text-white hover:from-orange-600 hover:to-blue-600 px-8 py-4 rounded-xl font-inter font-bold transition-all duration-300\"\n                                    data-testid=\"button-get-started\"\n                                  >\n                                    Get Started Today\n                                    <motion.div\n                                      animate={{ x: [0, 5, 0] }}\n                                      transition={{ duration: 1.5, repeat: Infinity }}\n                                    >\n                                      <ArrowRight className=\"ml-2 w-5 h-5\" />\n                                    </motion.div>\n                                  </Button>\n                                </Link>\n                              </motion.div>\n                <motion.div\n                                initial={{ opacity: 0, y: 20 }}\n                                animate={{ opacity: 1, y: 0 }}\n                                transition={{ delay: 0.9 }}\n                                whileHover={{ \n                                  scale: 1.05,\n                                  rotateY: 5,\n                                  rotateX: 5\n                                }}\n                                whileTap={{ scale: 0.95 }}\n                              >\n                <Link href=\"/contact\">\n                  <Button variant=\"outline\" className=\"border-2 border-gray-300 text-gray-700 hover:bg-gray-50 hover:border-orange-500 hover:text-orange-500 px-8 py-3 rounded-lg font-inter font-semibold transition-all duration-300 hover:shadow-md\">\n                    Get a Quote\n                  </Button>\n                </Link>\n                </motion.div>\n              </div>\n            </motion.div>\n\n            {/* Right Content */}\n            <motion.div\n              className=\"relative\"\n              initial={{ opacity: 0, x: 50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n            >\n              <div className=\"relative rounded-2xl overflow-hidden\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\"\n                  alt=\"Team working together\"\n                  className=\"w-full h-auto rounded-2xl\"\n                />\n\n                {/* Overlay Card */}\n                <div className=\"absolute top-6 left-6 bg-white rounded-2xl p-6 shadow-xl max-w-sm\">\n                  <h3 className=\"font-bold text-lg text-gray-900 mb-3\">\n                    Creating Impactful Brand Strategy for Your Business!\n                  </h3>\n\n                  <div className=\"flex items-center mb-3\">\n                    <div className=\"flex items-center\">\n                      {[...Array(5)].map((_, i) => (\n                        <Star key={i} className=\"w-5 h-5 text-yellow-400 fill-current\" />\n                      ))}\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center mb-3\">\n                    <span className=\"font-bold text-4xl text-gray-900 mr-3\">9.6</span>\n                    <div>\n                      <p className=\"text-sm text-gray-600\">Success Rate</p>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center mb-4\">\n  <div className=\"flex -space-x-2 mr-3\">\n     <div className=\"w-11 h-11 rounded-full bg-white border-2 border-white flex items-center justify-center shadow-sm\">\n      <img \n        src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Mars.png\" \n        alt=\"Mars\" \n        className=\"w-10 h-10 object-contain\"\n      />\n    </div>    \n    <div className=\"w-11 h-11 rounded-full bg-white border-2 border-white flex items-center justify-center shadow-sm\">\n      <img \n        src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/BritBox.png\" \n        alt=\"BritBox\" \n        className=\"w-10 h-10 object-contain\"\n      />\n    </div> \n    <div className=\"w-11 h-11 rounded-full bg-white border-2 border-white flex items-center justify-center shadow-sm\">\n      <img \n        src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/pepsico.png\" \n        alt=\"PepsiCo\" \n        className=\"w-10 h-10 object-contain\"\n      />\n    </div>  \n  </div>\n  <span className=\"text-sm font-medium text-gray-700\">Our Client Active</span>\n</div>\n                </div>\n\n                {/* Bottom Green Button */}\n                <div className=\"absolute bottom-6 right-6\">\n                  <Link href=\"/contact\">\n                  <Button className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-600 text-white hover:from-orange-600 hover:via-gray-500 hover:to-blue-700 font-inter font-semibold transition-all duration-200 hover:shadow-lg w-full mt-4\">\n                    Join the Future of Branding\n                  </Button>\n                  </Link>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n       {/* Growth & Success Section */}\n      <section className=\"py-16 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 items-center\">\n            {/* Left Card - Takes 2 columns */}\n            <motion.div\n              className=\"lg:col-span-2\"\n              initial={{ opacity: 0, x: -50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"bg-gradient-to-r from-orange-500 to-blue-500 text-white rounded-2xl p-8 flex flex-col lg:flex-row items-center gap-8\">\n                <div className=\"flex-shrink-0\">\n                  <img\n                    src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/service/hero-experience-2.png?ixlib=rb-4.0.3&auto=format&fit=crop&w=300&h=200\"\n                    alt=\"Team collaboration\"\n                    className=\"rounded-xl w-full lg:w-64 h-48 object-cover\"\n                  />\n                </div>\n                <div className=\"flex-1 text-white\">\n                  <h3 className=\"text-2xl lg:text-3xl font-bold mb-4\">\n                    Branding is simply, brand recognition\n                  </h3>\n                  <p className=\"mb-6 leading-relaxed\">\n                    We craft compelling campaigns through classic media, building brand recognition, trust, and visibility that stand the test of time.\n                  </p>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Right Section - Takes 1 column */}\n            <motion.div\n              className=\"lg:col-span-1\"\n              initial={{ opacity: 0, x: 50 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8, delay: 0.2 }}\n              viewport={{ once: true }}\n            >\n              <div className=\"text-center lg:text-left\">\n                <div className=\"flex justify-center lg:justify-start mb-4\">\n                  <div className=\"w-16 h-16 bg-gray-100 rounded-xl flex items-center justify-center text-lg-start\">\n                    <svg className=\"w-8 h-8 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n                      />\n                    </svg>\n                  </div>\n                  <h3 className=\"text-lg-end text-2xl font-bold text-gray-900 mb-4 mb-lg-4\">Success Our Priority</h3>\n                </div>\n                \n                <p className=\"text-gray-600 mb-8 leading-relaxed\">\n                  We Provide Brilliant Ideas & adding The World Called Sucess To Your Brand\n                </p>\n\n                {/* Statistics Card */}\n                <div className=\"bg-gradient-to-r from-orange-500 to-blue-500 text-white rounded-2xl p-6\">\n                  <div className=\"grid grid-cols-3 gap-4 text-center\">\n                    <div>\n                      <div className=\"text-2xl lg:text-3xl font-bold text-white-900 mb-1\">92%</div>\n                      <div className=\"text-xs lg:text-sm font-medium text-white-700\">Branding Startegy</div>\n                    </div>\n                    <div>\n                      <div className=\"text-2xl lg:text-3xl font-bold text-white-900 mb-1\">90%</div>\n                      <div className=\"text-xs lg:text-sm font-medium text-white-700\">Brand Conslutant</div>\n                    </div>\n                    <div>\n                      <div className=\"text-2xl lg:text-3xl font-bold text-white-900 mb-1\">87%</div>\n                      <div className=\"text-xs lg:text-sm font-medium text-white-700\">Brand Recognition</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </section>\n\n      {/* Trusted Brands Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h3 className=\"text-3xl font-bold text-gray-900 mb-4\">Trusted by Global Leaders</h3>\n            <p className=\"text-xl text-gray-600\">Building iconic brands across industries worldwide</p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-8 items-center\">\n            {brands.map((brand, index) => (\n              <motion.div\n                key={index}\n                className=\"flex justify-center group\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ scale: 1.1 }}\n              >\n                <img\n                  src={brand.src || \"/placeholder.svg\"}\n                  alt={brand.name}\n                  className=\"h-8 w-auto grayscale group-hover:grayscale-0 transition-all duration-500\"\n                />\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Services Section */}\n      <section className=\"py-24 bg-white relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-blue-50/50 to-purple-50/50\"></div>\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-20\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-5xl font-bold text-gray-900 mb-6\">Comprehensive Brand <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> Solutions</span></h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              From strategy to execution, we deliver end-to-end brand solutions that drive measurable business growth\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ y: -10 }}\n                className=\"group h-full\"\n              >\n                <Card className=\"border-none shadow-lg hover:shadow-2xl transition-all duration-500 group-hover:shadow-purple-200/50 h-full bg-white/80 backdrop-blur-sm\">\n                  <CardContent className=\"p-8 h-full flex flex-col\">\n                    <div\n                      className={`bg-gradient-to-r ${service.gradient} p-4 rounded-2xl inline-block mb-6 group-hover:scale-110 transition-transform duration-300`}\n                    >\n                      <service.icon className=\"w-8 h-8 text-white\" />\n                    </div>\n                    <h3 \n                    className={`text-2xl font-bold text-gray-900 mb-4 group-hover:${service.gradient} transition-colors`}\n                    >\n                      {service.title}\n                    </h3>\n                    <p className=\"text-gray-600 mb-6 leading-relaxed flex-grow\">{service.description}</p>\n                    <ul className=\"space-y-3 mb-8\">\n                      {service.features.map((feature, featureIndex) => (\n                        <li key={featureIndex} className=\"flex items-center text-gray-700\">\n                          <CheckCircle className={`w-5 h-5 text-green-500 group-hover:${service.gradient} mr-3 flex-shrink-0`} />\n                          <span className=\"text-sm font-medium\">{feature}</span>\n                        </li>\n                      ))}\n                    </ul>\n                   \n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Process Section */}\n      <section className=\"py-24 bg-gradient-to-br from-slate-900 to-blue-900 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-1/4 left-1/4 w-64 h-64 bg-gradient-to-r from-orange-400/10 to-pink-400/10 rounded-full blur-3xl\"></div>\n          <div className=\"absolute bottom-1/4 right-1/4 w-80 h-80 bg-gradient-to-r from-blue-400/10 to-cyan-400/10 rounded-full blur-3xl\"></div>\n        </div>\n\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-20\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-5xl font-bold mb-6\">Our Strategic Process</h2>\n            <p className=\"text-xl text-gray-300 max-w-3xl mx-auto\">\n              A proven methodology that transforms brands through strategic thinking and creative excellence\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {process.map((step, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center relative group\"\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.2 }}\n                viewport={{ once: true }}\n              >\n                <div className=\"relative mb-8\">\n                  <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-4 inline-block group-hover:bg-white/20 transition-colors duration-300\">\n                    <step.icon className=\"w-8 h-8 text-orange-400\" />\n                  </div>\n                </div>\n                <h3 className=\"text-xl font-bold mb-4 group-hover:text-orange-400 transition-colors\">{step.title}</h3>\n                <p className=\"text-gray-300 leading-relaxed\">{step.description}</p>\n                {index < process.length - 1 && (\n                  <div className=\"hidden lg:block absolute top-10 left-full w-full\">\n                    \n                  </div>\n                )}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Case Studies Section */}\n      <section className=\"py-24 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-20\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-5xl font-bold text-gray-900 mb-6\">Success <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> Stories</span> That Inspire</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Real results, measurable impact, and transformative brand growth across industries\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {caseStudies.map((study, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ y: -5 }}\n                className=\"group\"\n              >\n                <Card className=\"border-none shadow-lg hover:shadow-xl transition-all duration-500 overflow-hidden h-full\">\n                  <div className=\"relative overflow-hidden\">\n                    <img\n                      src={study.image || \"/placeholder.svg\"}\n                      alt={study.title}\n                      className=\"w-full h-64 object-cover group-hover:scale-105 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute top-4 left-4 bg-white/90 backdrop-blur-sm rounded-full px-3 py-1\">\n                      <span className=\"text-xs font-semibold text-gray-800\">{study.category}</span>\n                    </div>\n                    <div className=\"absolute top-4 right-4 bg-gradient-to-r from-orange-500 to-pink-500 text-white rounded-full px-3 py-1\">\n                      <span className=\"text-xs font-semibold\">{study.industry}</span>\n                    </div>\n                  </div>\n                  <CardContent className=\"p-8\">\n                    <h3 className=\"text-2xl font-bold text-gray-900 mb-4 group-hover:text-purple-600 transition-colors\">\n                      {study.title}\n                    </h3>\n                    <p className=\"text-gray-600 mb-6 leading-relaxed\">{study.description}</p>\n                    <div className=\"space-y-2 mb-6\">\n                      {study.results.map((result, resultIndex) => (\n                        <div key={resultIndex} className=\"flex items-center text-sm\">\n                          <CheckCircle className=\"w-4 h-4 text-green-500 mr-2\" />\n                          <span className=\"font-medium text-gray-700\">{result}</span>\n                        </div>\n                      ))}\n                    </div>\n                    <Link href=\"/about\">\n                    <Button\n                      variant=\"outline\"\n                      className=\"w-full group-hover:border-purple-500 group-hover:text-purple-500 bg-transparent\"\n                    >\n                      View Case Study\n                      <ArrowUpRight className=\"ml-2 w-4 h-4\" />\n                    </Button>\n                    </Link>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Achievements Section */}\n      <section className=\"py-24 bg-gradient-to-r from-blue-600 to-orange-600 text-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-5xl font-bold mb-6\">Numbers That Tell Our Story</h2>\n            <p className=\"text-xl text-blue-100 max-w-3xl mx-auto\">\n              Measurable impact and proven results across global markets\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-8\">\n            {achievements.map((achievement, index) => (\n              <motion.div\n                key={index}\n                className=\"text-center group\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                whileInView={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ scale: 1.05 }}\n              >\n                <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-6 mb-4 group-hover:bg-white/20 transition-colors\">\n                  <achievement.icon className=\"w-8 h-8 text-orange-400 mx-auto mb-4\" />\n                  <div className=\"text-4xl lg:text-5xl font-bold mb-2 bg-gradient-to-r from-orange-400 to-pink-400 bg-clip-text text-transparent\">\n                    {achievement.number}\n                  </div>\n                  <h3 className=\"text-lg font-bold mb-2\">{achievement.label}</h3>\n                  <p className=\"text-blue-100 text-sm\">{achievement.description}</p>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-24 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <motion.div\n            className=\"text-center mb-20\"\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-5xl font-bold text-gray-900 mb-6\">Client Success <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> Stories</span></h2>\n            <p className=\"text-xl text-gray-600\">Hear from leaders who've transformed their brands with us</p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {testimonials.map((testimonial, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                whileHover={{ y: -5 }}\n                className=\"group\"\n              >\n                <Card className=\"border-none shadow-lg hover:shadow-xl transition-all duration-500 h-full bg-gradient-to-br from-gray-50 to-white\">\n                  <CardContent className=\"p-8\">\n                    <Quote className=\"w-8 h-8 text-purple-400 mb-4\" />\n                    <div className=\"flex items-center mb-4\">\n                      {[...Array(5)].map((_, i) => (\n                        <Star key={i} className=\"w-5 h-5 text-yellow-400 fill-current\" />\n                      ))}\n                    </div>\n                    <p className=\"text-gray-700 mb-6 leading-relaxed text-lg\">\"{testimonial.content}\"</p>\n                    <div className=\"flex items-center\">\n                      <img\n                        src={testimonial.avatar || \"/placeholder.svg\"}\n                        alt={testimonial.name}\n                        className=\"w-12 h-12 rounded-full mr-4\"\n                      />\n                      <div>\n                        <div className=\"font-bold text-gray-900\">{testimonial.name}</div>\n                        <div className=\"text-gray-600 text-sm\">{testimonial.role}</div>\n                        <div className=\"text-purple-600 text-sm font-medium\">{testimonial.company}</div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-24 bg-gradient-to-br from-blue-600 via-orange-600 to-blue-500 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <motion.div\n            className=\"absolute top-1/4 left-1/4 w-96 h-96 bg-gradient-to-r from-orange-400/20 to-blue-400/20 rounded-full blur-3xl\"\n            animate={{ scale: [1, 1.2, 1], opacity: [0.3, 0.6, 0.3] }}\n            transition={{ duration: 8, repeat: Number.POSITIVE_INFINITY }}\n          />\n          <motion.div\n            className=\"absolute bottom-1/4 right-1/4 w-80 h-80 bg-gradient-to-r from-blue-400/20 to-orange-400/20 rounded-full blur-3xl\"\n            animate={{ scale: [1.2, 1, 1.2], opacity: [0.4, 0.7, 0.4] }}\n            transition={{ duration: 10, repeat: Number.POSITIVE_INFINITY }}\n          />\n        </div>\n\n        <div className=\"relative max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n            viewport={{ once: true }}\n          >\n            <h2 className=\"text-5xl lg:text-6xl font-bold mb-8\">\n              Ready to Transform Your Brand?\n            </h2>\n            <p className=\"text-xl text-white-600 mb-12 max-w-3xl mx-auto leading-relaxed\">\n              Join hundreds of successful brands who've partnered with us to create extraordinary brand experiences that\n              drive growth and lasting impact.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-6 justify-center\">\n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                <Link href=\"/contact\">\n                <Button className=\"bg-gradient-to-r from-orange-500 to-blue-500 hover:from-blue-600 hover:to-orange-600 text-white px-12 py-6 text-lg rounded-2xl shadow-2xl\">\n                  Start Your Transformation\n                  <ArrowRight className=\"ml-2 w-6 h-6\" />\n                </Button>\n                </Link>\n              </motion.div>\n              <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n                <Link href=\"/contact\">\n                <Button\n                  variant=\"outline\"\n                  className=\"border-2 border-white/30 text-white hover:bg-white/10 backdrop-blur-sm px-12 py-6 text-lg rounded-2xl bg-transparent\"\n                >\n                  Schedule Consultation\n                </Button>\n                  </Link>\n              </motion.div>\n            </div>\n\n            \n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  )\n}\n","size_bytes":38153},"client/src/pages/contact.tsx":{"content":"\"use client\"\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport { ChevronDown, ChevronRight } from \"lucide-react\";\nimport { motion } from \"framer-motion\";\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n\n  const [openFaq, setOpenFaq] = useState<number | null>(null);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Handle form submission here\n    console.log(\"Form submitted:\", formData);\n  };\n\n  const faqItems = [\n    {\n      question: \"How do you approach brand strategy development?\",\n      answer: \"We begin with comprehensive market research and competitive analysis to understand your position. Our strategic approach combines data-driven insights with creative thinking to develop a unique brand positioning that resonates with your target audience and drives business growth.\"\n    },\n    {\n      question: \"What's included in your innovation consulting?\",\n      answer: \"Our innovation consulting includes market opportunity assessment, concept development and validation, prototype creation, testing methodologies, and implementation roadmaps. We help you transform ideas into market-ready solutions with measurable impact.\"\n    },\n    {\n      question: \"How long does a typical project take?\",\n      answer: \"Project timelines vary based on scope and complexity. Brand strategy projects typically take 8-12 weeks, while innovation consulting can range from 6-16 weeks. We provide detailed timelines during our initial consultation to ensure clear expectations.\"\n    },\n    {\n      question: \"Do you work with startups and enterprises?\",\n      answer: \"Yes, we work with companies of all sizes, from early-stage startups to Fortune 500 enterprises. Our approach is tailored to each client's unique needs, resources, and market position to deliver maximum value and impact.\"\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-b from-gray-50 to-white py-10 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"font-spartan font-bold text-4xl md:text-5xl lg:text-6xl text-gray-900 mb-6\">\n              Have any questions?<br />\n              <span className=\"bg-gradient-to-r from-orange-500 to-blue-600 bg-clip-text text-transparent\">\n                We're happy to answer them!\n              </span>\n            </h1>\n            <p className=\"font-inter text-xl text-gray-600 max-w-2xl mx-auto leading-relaxed\">\n              Get in touch with our team of experts to discuss your project needs, explore partnership opportunities, or learn more about how we can help transform your business through innovation.\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Contact Form Section */}\n      <section className=\"px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-2xl mx-auto\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n          >\n            <Card className=\"shadow-xl border-0 bg-white\">\n              <CardContent className=\"p-8 md:p-12\">\n              \n                <h2 className=\"font-spartan font-bold text-4xl md:text-5xl lg:text-6xl text-gray-900 mb-6 text-center\">\n                  <span className=\"bg-gradient-to-r from-blue-500 to-orange-600 bg-clip-text text-transparent\">\n                    Get In Touch \n                  </span>\n                </h2>\n                \n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div>\n                    <label htmlFor=\"name\" className=\"block font-inter text-sm font-medium text-gray-700 mb-2\">\n                      Name\n                    </label>\n                    <Input\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      value={formData.name}\n                      onChange={handleInputChange}\n                      className=\"w-full h-12 px-4 border border-gray-200 rounded-lg font-inter text-gray-900 placeholder:text-gray-400 focus:border-orange-500 focus:ring-orange-500 transition-colors\"\n                      placeholder=\"Enter your name\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"email\" className=\"block font-inter text-sm font-medium text-gray-700 mb-2\">\n                      Email Address\n                    </label>\n                    <Input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={handleInputChange}\n                      className=\"w-full h-12 px-4 border border-gray-200 rounded-lg font-inter text-gray-900 placeholder:text-gray-400 focus:border-orange-500 focus:ring-orange-500 transition-colors\"\n                      placeholder=\"Enter your email address\"\n                      required\n                    />\n                  </div>\n\n                  <div>\n                    <label htmlFor=\"message\" className=\"block font-inter text-sm font-medium text-gray-700 mb-2\">\n                      Message\n                    </label>\n                    <Textarea\n                      id=\"message\"\n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleInputChange}\n                      rows={5}\n                      className=\"w-full px-4 py-3 border border-gray-200 rounded-lg font-inter text-gray-900 placeholder:text-gray-400 focus:border-orange-500 focus:ring-orange-500 transition-colors resize-none\"\n                      placeholder=\"Tell us about your project or ask us anything...\"\n                      required\n                    />\n                  </div>\n\n                  <Button\n                    type=\"submit\"\n                    className=\"w-full h-12 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-inter font-semibold rounded-lg transition-all duration-200 hover:shadow-lg\"\n                  >\n                    Submit\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.4 }}\n          >\n            <h2 className=\"font-spartan font-bold text-3xl md:text-4xl text-gray-900 text-center mb-12\">\n              Frequently Asked Questions\n            </h2>\n            \n            <div className=\"space-y-4\">\n              {faqItems.map((item, index) => (\n                <Card key={index} className=\"border border-gray-200 bg-white\">\n                  <Collapsible\n                    open={openFaq === index}\n                    onOpenChange={() => setOpenFaq(openFaq === index ? null : index)}\n                  >\n                    <CollapsibleTrigger className=\"w-full\">\n                      <CardContent className=\"p-6 flex items-center justify-between hover:bg-gray-50 transition-colors\">\n                        <h3 className=\"font-inter font-semibold text-left text-gray-900\">\n                          {item.question}\n                        </h3>\n                        <div className=\"flex-shrink-0 ml-4\">\n                          {openFaq === index ? (\n                            <ChevronDown className=\"h-5 w-5 text-gray-500\" />\n                          ) : (\n                            <ChevronRight className=\"h-5 w-5 text-gray-500\" />\n                          )}\n                        </div>\n                      </CardContent>\n                    </CollapsibleTrigger>\n                    <CollapsibleContent>\n                      <CardContent className=\"px-6 pb-6 pt-0\">\n                        <div className=\"border-t border-gray-100 pt-4\">\n                          <p className=\"font-inter text-gray-600 leading-relaxed\">\n                            {item.answer}\n                          </p>\n                        </div>\n                      </CardContent>\n                    </CollapsibleContent>\n                  </Collapsible>\n                </Card>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":9496},"client/src/pages/home.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport Prism from \"@/components/Prism\";\nimport { Link } from \"wouter\";\nimport { \n  ArrowRight, \n  Brain, \n  Database, \n  Target, \n  FlaskConical, \n  BarChart3, \n  CheckCircle, \n  Star, \n  Lightbulb,\n  Trophy,\n  TrendingUp,\n  Play,\n  Shield,\n  Zap,\n  Clock,\n  Award,\n  ChevronLeft,\n  ChevronRight,\n  Users\n} from \"lucide-react\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Home() {\n  const [currentTestimonial, setCurrentTestimonial] = useState(0);\n  const [email, setEmail] = useState(\"\");\n\n  // Auto-rotate testimonials\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const stats = [\n    { number: \"200+\", label: \"Projects Completed\", description: \"Successful AI implementations across industries\", icon: CheckCircle },\n    { number: \"15K+\", label: \"Happy Clients\", description: \"Satisfied customers worldwide\", icon: Users },\n    { number: \"94%\", label: \"Success Rate\", description: \"Project completion rate\", icon: Trophy },\n    { number: \"330%\", label: \"ROI Increase\", description: \"Average return on investment\", icon: TrendingUp }\n  ];\n\n  const services = [\n    {\n      icon: Lightbulb,\n      title: \"Innovation\",\n      description: \"Test, validate, and refine innovative concepts before market launch.\",\n    },\n    {\n      icon: Award,\n      title: \"Brand Experience\",\n      description: \"Integrate digital storytelling techniques to build strong customer relationships.\",\n    },\n    {\n      icon: Shield,\n      title: \"Brand Strategy\",\n      description: \"Use data-driven content strategies to amplify brand visibility and influence.\",\n    },\n    {\n      icon: Target,\n      title: \"Digital Advertising\",\n      description: \"Performance-driven advertising campaigns with measurable ROI.\",\n    },\n     {\n      icon: Brain,\n      title: \"AI Strategy\",\n      description: \"Advanced AI solutions for business transformation and competitive advantage.\",\n    },\n    {\n      icon: BarChart3,\n      title: \"Data Analytics\",\n      description: \"Comprehensive business intelligence and data insights.\",\n    }\n  ];\n\n  const innovationSteps = [\n    {\n      step: \"Step 1\",\n      title: \"Discovery\",\n      description: \"We start by understanding your business challenges and identifying opportunities for innovation.\",\n      icon: Lightbulb,\n      gradient: \"from-orange-400 to-orange-500\"\n    },\n    {\n      step: \"Step 2\", \n      title: \"Strategy\",\n      description: \"Our team develops a comprehensive strategy tailored to your specific needs and market position.\",\n      icon: Target,\n      gradient: \"from-orange-400 to-orange-500\"\n    },\n    {\n      step: \"Step 3\",\n      title: \"Development\",\n      description: \"We build and test solutions using cutting-edge technology and best practices.\",\n      icon: FlaskConical,\n      gradient: \"from-orange-400 to-orange-500\"\n    },\n    {\n      step: \"Step 4\",\n      title: \"Implementation\",\n      description: \"Seamless deployment with ongoing support to ensure optimal performance.\",\n      icon: CheckCircle,\n      gradient: \"from-orange-400 to-orange-500\"\n    },\n    {\n      step: \"Step 5\",\n      title: \"Optimization\",\n      description: \"Continuous monitoring and improvement to maximize results and ROI.\",\n      icon: TrendingUp,\n      gradient: \"from-orange-400 to-orange-500\"\n    },\n    {\n      step: \"Step 6\",\n      title: \"Scale\",\n      description: \"Expand successful solutions across your organization for maximum impact.\",\n      icon: Trophy,\n      gradient: \"from-orange-400 to-orange-500\"\n    }\n  ];\n\n  const testimonials = [\n    {\n      name: \"Senior Strategist\",\n      role: \"PepsiCo.\",\n      content: \"Gill Technologies’ team was available 24/7, adapting to our needs and timelines. Their flexibility and speed made our collaboration seamless.\",\n      image: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/testimonial/pepsico.png?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      rating: 5\n    },\n    {\n      name: \"Digital Innovation Officer\",\n      role: \"Liberty Insurance\",\n      content: \"We saw a 40% increase in customer engagement thanks to Gill’s data-driven marketing models. They understand how to make technology drive business results.\",\n      image: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/testimonial/Liberty-Insurance.png?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      rating: 4\n    },\n    {\n      name: \"Brand Manager\",\n      role: \"Ricola Candies\",\n      content: \"Gill Technologies helped us launch a powerful campaign that deeply resonated with our target market. The team brought energy, creativity, and results.\",\n      image: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/testimonial/Ricola-Candies.png?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      rating: 5\n    },\n    {\n      name: \"Marketing Lead\",\n      role: \"Nike China\",\n      content: \"Their data insights and campaign execution brought a measurable uplift in our brand interaction across China. Truly professional and innovative team.\",\n      image: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/testimonial/Nike-China.png?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&h=150\",\n      rating: 4\n    }\n  ];\n\n  const brands = [\n    { name: \"Ricola\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Ricola-Candies.png\" },\n    { name: \"Logitech\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Logitech.png\" },\n    { name: \"Burlington\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Burlington.png\" },\n    { name: \"Adtalem\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Adtalem.png\" },\n    { name: \"Liberty-Insurance\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Liberty-Insurance.png\" },\n    { name: \"Mars\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Mars.png\" },\n    { name: \"Nike-China\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Nike-China.png\" },\n    { name: \"pepsico\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/pepsico.png\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n\n      {/* Hero Section */}\n      <section className=\"relative bg-gradient-to-br from-gray-50 to-white py-20 overflow-hidden\">\n        {/* Prism Background */}\n        <div className=\"absolute inset-0 z-0\">\n          <Prism\n            animationType=\"hover\"\n            timeScale={0.5}\n            height={3.5}\n            baseWidth={5.5}\n            scale={3.6}\n            hueShift={0}\n            colorFrequency={1}\n            noise={0}\n            glow={1}\n            transparent={true}\n            hoverStrength={2}\n            inertia={0.05}\n            suspendWhenOffscreen={false}\n          />\n        </div>\n        \n        {/* Decorative elements */}\n        <div className=\"absolute top-10 left-10 w-32 h-32 bg-gradient-to-br from-orange-100 to-orange-200 rounded-2xl opacity-60 transform rotate-12 z-10\"></div>\n        <div className=\"absolute bottom-10 right-10 w-40 h-40 bg-gradient-to-br from-blue-100 to-blue-200 rounded-2xl opacity-60 transform -rotate-12 z-10\"></div>\n        \n        <div className=\"relative z-20 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"space-y-8 animate-fade-in-up\">\n              <h1 className=\"font-spartan font-bold text-5xl lg:text-6xl text-gray-900 leading-tight\">\n                Transforming <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent\"> Digital Excellence\n                </span> <br />\n                with AI\n              </h1>              \n              <p className=\"font-inter text-gray-600 text-xl leading-relaxed max-w-lg\">\n                We blend innovation, experience, and strategic thinking to create breakthrough solutions that drive your business forward in the digital age.\n              </p>\n              {/* Feature list */}\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"w-5 h-5 text-orange-500\" />\n                  <span className=\"font-inter text-gray-700\">Advanced AI-powered market intelligence</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"w-5 h-5 text-orange-500\" />\n                  <span className=\"font-inter text-gray-700\">Strategic digital transformation consulting</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"w-5 h-5 text-orange-500\" />\n                  <span className=\"font-inter text-gray-700\">Data-driven innovation solutions</span>\n                </div>\n              </div>\n\n              {/* Email input and button */}\n              <div className=\"flex flex-col sm:flex-row gap-4 max-w-md\">\n                <Input \n                  type=\"email\" \n                  placeholder=\"Enter your business email\" \n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"flex-1 font-inter\"\n                />\n                <Link href=\"/contact\">\n                  <Button className=\"bg-orange-500 hover:bg-orange-600 text-white font-inter font-semibold px-8 py-3 rounded-lg transition-all duration-300 hover:shadow-lg hover:scale-105\">\n                    Get Started\n                    <ArrowRight className=\"ml-2 w-4 h-4\" />\n                  </Button>\n                </Link>\n              </div>\n            </div>\n            \n            {/* Hero image */}\n            <div className=\"relative animate-fade-in-up animation-delay-300\">\n              <div className=\"relative\">\n                <img \n                  src=\"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/service/experience-second-Solution-1.avif?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"Digital transformation workspace\"\n                  className=\"rounded-2xl shadow-2xl w-full h-auto transform hover:scale-105 transition-transform duration-500\"\n                />\n                <div className=\"absolute -top-6 -right-6 bg-white rounded-xl shadow-lg p-4 animate-float\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"text-blue-500 text-xs font-semibold\">#</div>\n                    <div>\n                      <div className=\"text-blue-500 text-sm font-semibold\">Innovation</div>\n                      <div className=\"text-blue-500 text-xs\">Leader</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"absolute -bottom-6 -left-6 bg-white rounded-xl shadow-lg p-4 animate-float animation-delay-1000\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"bg-green-100 rounded p-1\">\n                      <TrendingUp className=\"w-4 h-4 text-green-600\" />\n                    </div>\n                    <div>\n                      <div className=\"text-green-600 text-xs\">Growth Rate</div>\n                      <div className=\"text-green-600 text-lg font-bold\">87%</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Trusted by brands */}\n      <section className=\"py-12 bg-gray-50 overflow-hidden\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <p className=\"text-center font-inter text-gray-500 text-sm mb-8\">Trusted by leading brands</p>\n          <div className=\"relative\">\n            <div className=\"flex animate-scroll space-x-16 items-center\">\n              {[...brands, ...brands].map((brand, index) => (\n                <div key={index} className=\"flex-shrink-0 opacity-60 hover:opacity-100 transition-opacity duration-300\">\n                  <img \n                    src={brand.src} \n                    alt={brand.name} \n                    className=\"h-8 w-auto grayscale hover:grayscale-0 transition-all duration-300\"\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Statistics Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-spartan font-bold text-4xl text-gray-900 mb-4\">\n              Our <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent\">Impact</span> in Numbers\n            </h2>\n            <p className=\"font-inter text-gray-600 text-lg\">Results that speak louder than words</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {stats.map((stat, index) => (\n              <Card key={index} className=\"text-center p-8 border-0 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-105 hover:rotate-1 bg-gradient-to-br from-white to-gray-50\">\n                <CardContent className=\"p-0\">\n                  <div className=\"flex justify-center mb-4\">\n                    <div className=\"bg-gray-100 rounded-full p-3\">\n                      <stat.icon className=\"w-6 h-6 text-gray-800\" />\n                    </div>\n                  </div>\n                  <div className=\"font-poppins font-bold text-4xl lg:text-5xl text-orange-500 mb-2\">\n                    {stat.number}\n                  </div>\n                  <h3 className=\"font-inter text-gray-900 font-semibold text-lg mb-2\">{stat.label}</h3>\n                  <p className=\"font-inter text-gray-600 text-sm\">{stat.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Digital Services Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-4\">\n              Our <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent\">Digital Services</span> Drive Innovation\n            </h2>\n            <p className=\"font-inter text-gray-600 text-lg max-w-3xl mx-auto\">\n              We create impact-driven solutions across industries through cutting-edge technology\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {services.map((service, index) => (\n              <Card key={index} className=\"hover:shadow-xl transition-all duration-300 group hover:scale-105 border-0\">\n                <CardContent className=\"p-8\">\n                  <div className=\"bg-gradient-to-br from-orange-100 to-orange-200 rounded-xl p-4 w-16 h-16 flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300\">\n                    <service.icon className=\"w-8 h-8 text-orange-600\" />\n                  </div>\n                  <h3 className=\"font-spartan font-bold text-xl text-gray-900 mb-4\">\n                    {service.title}\n                  </h3>\n                  <p className=\"font-inter text-gray-600 mb-6 leading-relaxed text-sm\">\n                    {service.description}\n                  </p>\n                  <Link \n                    href={service.title === 'Innovation' ? '/innovation' : service.title === 'Brand Experience' ? '/brand-experience' : service.title === 'Brand Strategy' ? '/brand-strategy' : '/about'} \n                    className=\"font-inter font-semibold text-orange-500 hover:text-orange-600 transition-colors duration-200 flex items-center text-sm\"\n                  >\n                    Learn More\n                    <ArrowRight className=\"ml-2 w-4 h-4\" />\n                  </Link>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n          \n          <div className=\"text-center mt-12\">\n            <Link href=\"/contact\">\n              <Button className=\"bg-orange-500 hover:bg-orange-600 text-white font-inter font-semibold px-8 py-3 rounded-lg transition-all duration-300 hover:shadow-lg hover:scale-105\">\n                Get in Touch\n                <ArrowRight className=\"ml-2 w-4 h-4\" />\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Case Study Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <div className=\"bg-gradient-to-r from-orange-200 to-orange-200 rounded-xl p-1 inline-block mb-6\">\n                <div className=\"bg-white rounded-lg px-4 py-2\">\n                  <span className=\"font-inter font-semibold text-orange-600\">Case Study</span>\n                </div>\n              </div>\n              \n              <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-6\">\n                How we helped \n                <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent\"> BRANDS</span> <br />\n                increase market efficiency \n                by <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent\"> 85%</span>\n              </h2>\n              \n              <p className=\"font-inter text-gray-600 text-lg mb-8 leading-relaxed\">\n                By intergrating AI-driven insights and leading digital transformation strategies, we empowered multiple brands to streamline operations, make smarter decisions, and scale faster in dynamic markets.\n              </p>\n              \n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"w-5 h-5 text-orange-500 flex-shrink-0\" />\n                  <span className=\"font-inter text-gray-700\">Achieved a 85% boost in overall operational efficiency</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"w-5 h-5 text-orange-500 flex-shrink-0\" />\n                  <span className=\"font-inter text-gray-700\">Cut process delays by over 50% across industries</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"w-5 h-5 text-orange-500 flex-shrink-0\" />\n                  <span className=\"font-inter text-gray-700\">Elevated customer satisfaction rates to as high as 95%</span>\n                </div>\n              </div>\n              \n              <Link href=\"/about\">\n                <Button className=\"bg-orange-500 hover:bg-orange-600 text-white font-inter font-semibold px-8 py-3 rounded-lg transition-all duration-300 hover:shadow-lg hover:scale-105\">\n                  Read Full Case Study\n                  <ArrowRight className=\"ml-2 w-4 h-4\" />\n                </Button>\n              </Link>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-orange-50 to-orange-100 rounded-2xl p-8\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1584254520678-31fe4dce5306?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                  alt=\"Brands case study\"\n                  className=\"rounded-xl shadow-lg w-full h-auto hover:rotate-1 transition-transform duration-500\"\n                />\n              </div>\n              <div className=\"absolute -bottom-4 -right-4 bg-white rounded-xl p-4 shadow-lg\">\n                <div className=\"text-2xl font-bold text-orange-500\">85%</div>\n                <div className=\"text-sm text-gray-600\">Efficiency Increase</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Innovation Process Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-8\">\n              Our <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent\">Innovation</span> Process\n            </h2>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {innovationSteps.map((step, index) => (\n              <Card key={index} className=\"relative hover:shadow-xl transition-all duration-300 hover:scale-105 border-0 overflow-hidden\">\n                <div className=\"absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500\"></div>\n                <CardContent className=\"p-8\">\n                  <div className=\"bg-gradient-to-br from-orange-100 to-orange-200 rounded-full p-3 w-12 h-12 flex items-center justify-center mb-6\">\n                    <step.icon className=\"w-6 h-6 text-orange-600\" />\n                  </div>\n                  <div className=\"text-orange-500 font-inter font-semibold text-sm mb-2\">{step.step}</div>\n                  <h3 className=\"font-spartan font-bold text-xl text-gray-900 mb-4\">{step.title}</h3>\n                  <p className=\"font-inter text-gray-600 leading-relaxed text-sm\">{step.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 bg-gradient-to-br from-gray-900 to-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-spartan font-bold text-4xl text-white mb-4\">\n              What Our <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent\">Partners</span> Say\n            </h2>\n            <p className=\"font-inter text-gray-300 text-lg\">Trusted by industry leaders worldwide</p>\n          </div>\n          \n          <div className=\"relative overflow-hidden\">\n            <div className=\"flex transition-transform duration-500 ease-in-out\" \n                 style={{transform: `translateX(-${currentTestimonial * 100}%)`}}>\n              {testimonials.map((testimonial, index) => (\n                <div key={index} className=\"w-full flex-shrink-0\">\n                  <Card className=\"bg-gray-800 border-gray-700 max-w-4xl mx-auto\">\n                    <CardContent className=\"p-12\">\n                      <div className=\"flex justify-center mb-6\">\n                        {[...Array(testimonial.rating)].map((_, i) => (\n                          <Star key={i} className=\"w-6 h-6 text-orange-500 fill-current\" />\n                        ))}\n                      </div>\n                      \n                      <p className=\"font-inter text-white text-xl leading-relaxed mb-8 text-center\">\n                        \"{testimonial.content}\"\n                      </p>\n                      \n                      <div className=\"flex items-center justify-center\">\n                        <img \n                          src={testimonial.image} \n                          alt={testimonial.name} \n                          className=\"w-16 h-16 rounded-full mr-4\"\n                        />\n                        <div>\n                          <div className=\"font-inter font-semibold text-white text-lg\">\n                            {testimonial.name}\n                          </div>\n                          <div className=\"font-inter text-gray-300\">\n                            {testimonial.role}\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              ))}\n            </div>\n            \n            {/* Navigation buttons */}\n            <button \n              onClick={() => setCurrentTestimonial((prev) => (prev - 1 + testimonials.length) % testimonials.length)}\n              className=\"absolute left-0 top-1/2 transform -translate-y-1/2 bg-white/10 hover:bg-white/20 text-white rounded-full p-3 transition-all duration-300\"\n            >\n              <ChevronLeft className=\"w-6 h-6\" />\n            </button>\n            \n            <button \n              onClick={() => setCurrentTestimonial((prev) => (prev + 1) % testimonials.length)}\n              className=\"absolute right-0 top-1/2 transform -translate-y-1/2 bg-white/10 hover:bg-white/20 text-white rounded-full p-3 transition-all duration-300\"\n            >\n              <ChevronRight className=\"w-6 h-6\" />\n            </button>\n            \n            {/* Dots indicator */}\n            <div className=\"flex justify-center mt-8 space-x-2\">\n              {testimonials.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => setCurrentTestimonial(index)}\n                  className={`w-3 h-3 rounded-full transition-all duration-300 ${\n                    index === currentTestimonial ? 'bg-orange-500' : 'bg-gray-600 hover:bg-gray-500'\n                  }`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-r from-orange-400 to-orange-500\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-start\">\n            {/* Left side - Main CTA */}\n            <div className=\"text-white\">\n              <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl mb-6 leading-tight\">\n                Ready to Transform Your Business with Advanced Insights?\n              </h2>\n              <p className=\"font-inter text-orange-100 text-lg mb-8 leading-relaxed\">\n                Get your free, no-obligation consultation and discover how we can accelerate your digital innovation journey.\n              </p>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Link href=\"/contact\">\n                <Button className=\"bg-white text-orange-500 hover:bg-gray-100 px-8 py-4 rounded-lg font-inter font-semibold transition-all duration-300 hover:shadow-lg\">\n                  Schedule Consultation\n                  <ArrowRight className=\"ml-2 w-5 h-5\" />\n                </Button>\n                </Link>\n                <Link href=\"/contact\">\n                <Button variant=\"outline\" className=\"border-2 border-white text-white bg-transparent hover:bg-white hover:text-orange-500 px-8 py-4 rounded-lg font-inter font-semibold transition-all duration-300\">\n                  View Case Studies\n                </Button>\n                </Link>\n              </div>\n            </div>\n            \n            {/* Right side - What's Included */}\n            <div className=\"bg-white/10 backdrop-blur-sm rounded-2xl p-8 border border-white/20\">\n              <h3 className=\"font-spartan font-bold text-2xl text-white mb-6\">\n                What's Included in Your Consultation:\n              </h3>\n              \n              <div className=\"space-y-4\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"bg-white/20 rounded-full p-1 mt-1\">\n                    <CheckCircle className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div>\n                    <div className=\"font-inter font-semibold text-white\">Digital Assessment</div>\n                    <p className=\"font-inter text-white/80 text-sm\">A comprehensive review of your current technology landscape.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"bg-white/20 rounded-full p-1 mt-1\">\n                    <CheckCircle className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div>\n                    <div className=\"font-inter font-semibold text-white\">Market Analysis</div>\n                    <p className=\"font-inter text-white/80 text-sm\">See how you compare to industry leaders and competitors.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"bg-white/20 rounded-full p-1 mt-1\">\n                    <CheckCircle className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div>\n                    <div className=\"font-inter font-semibold text-white\">Innovation Opportunities</div>\n                    <p className=\"font-inter text-white/80 text-sm\">Discover untapped technology opportunities for your business.</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-3\">\n                  <div className=\"bg-white/20 rounded-full p-1 mt-1\">\n                    <CheckCircle className=\"w-4 h-4 text-white\" />\n                  </div>\n                  <div>\n                    <div className=\"font-inter font-semibold text-white\">Strategic Roadmap</div>\n                    <p className=\"font-inter text-white/80 text-sm\">Get a tailored action plan to accelerate your digital transformation.</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":30442},"client/src/pages/innovation.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport Navigation from \"@/components/navigation\";\nimport Footer from \"@/components/footer\";\nimport { Link } from \"wouter\";\nimport { \n  ArrowRight, \n  Lightbulb,\n  TrendingUp,\n  Target,\n  Brain,\n  FlaskConical,\n  BarChart3,\n  Rocket,\n  Zap,\n  Search,\n  Users,\n  CheckCircle,\n  Sparkles,\n  Globe,\n  Award,\n  Clock\n} from \"lucide-react\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Innovation() {\n  const [isVisible, setIsVisible] = useState(false);\n  const [scrollY, setScrollY] = useState(0);\n\n  useEffect(() => {\n    setIsVisible(true);\n    const handleScroll = () => setScrollY(window.scrollY);\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  const brands = [\n    { name: \"Ricola\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Ricola-Candies.png\" },\n    { name: \"Logitech\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Logitech.png\" },\n    { name: \"Burlington\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Burlington.png\" },\n    { name: \"Adtalem\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Adtalem.png\" },\n    { name: \"Liberty-Insurance\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Liberty-Insurance.png\" },\n    { name: \"Mars\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Mars.png\" },\n    { name: \"Nike-China\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/Nike-China.png\" },\n    { name: \"pepsico\", src: \"https://digital-flow-solutions.github.io/Gill-Technologies-Website/img/brand/pepsico.png\" }\n  ];\n\n  const benefits = [\n    {\n      title: \"AI & Data-Driven Strategy\",\n      description: \"Predict market shifts and act before your competitors do.\",\n      icon: Brain\n    },\n    {\n      title: \"Faster Product Development Cycles\",\n      description: \"Save time and money by quickly validating and launching the right products.\",\n      icon: Rocket\n    },     \n    {\n      title: \"Human-Centered Design Approach\",\n      description: \"Build solutions that are loved by your customers and adopted easily.\",\n      icon: Users\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-white\">\n      <Navigation />\n\n      {/* Enhanced Hero Section */}\n      <section className=\"relative bg-gradient-to-br from-gray-50 to-white py-20 overflow-hidden\">\n   \n        \n        {/* Animated background elements */}\n        <div \n          className=\"absolute top-10 left-10 w-32 h-32 bg-gradient-to-br from-orange-100 to-orange-200 rounded-2xl opacity-60 transform rotate-12 z-10\"\n          style={{ transform: `translateY(${scrollY * 0.1}px) rotate(12deg)` }}\n        ></div>\n        <div \n          className=\"absolute bottom-10 right-10 w-40 h-40 bg-gradient-to-br from-blue-100 to-blue-200 rounded-2xl opacity-60 transform -rotate-12 z-10\"\n          style={{ transform: `translateY(${scrollY * -0.15}px) rotate(-12deg)` }}\n        ></div>\n        \n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div className={`transform transition-all duration-1000 ${isVisible ? 'translate-x-0 opacity-100' : '-translate-x-20 opacity-0'}`}>\n              <div className=\"flex items-center mb-6 group\">\n                <div className=\"bg-orange-100 p-2 rounded-lg mr-3 group-hover:rotate-12 transition-transform duration-300\">\n                  <Lightbulb className=\"w-6 h-6 text-orange-500\" />\n                </div>\n                <span className=\"font-inter text-orange-500 font-semibold tracking-wide\">Innovation</span>\n              </div>\n              \n              <h1 className=\"font-spartan font-bold text-5xl lg:text-6xl text-gray-900 leading-tight mb-6\">\n                Helping Brands Grow with  <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\">Innovative Solutions</span>\n              </h1>\n              \n              <p className=\"font-inter text-gray-600 text-xl leading-relaxed max-w-lg mb-8\">\n                We identify gaps and trends using advanced market research and competitive analysis. Our approach empowers you to stay ahead of the curve.\n              </p>             \n\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Link href=\"/contact\">\n                  <Button className=\"bg-orange-500 hover:bg-orange-600 text-white font-inter font-semibold px-8 py-3 rounded-lg transition-all duration-300 hover:shadow-lg hover:scale-105 group\">\n                    Get Started\n                    <ArrowRight className=\"ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform\" />\n                  </Button>\n                </Link>\n                <Link href=\"/contact\">\n                  <Button variant=\"outline\" className=\"border-2 border-gray-300 text-gray-700 hover:bg-gray-50 hover:border-orange-500 hover:text-orange-500 px-8 py-3 rounded-lg font-inter font-semibold transition-all duration-300 hover:shadow-md\">\n                    Get a Quote\n                  </Button>\n                </Link>\n              </div>\n            </div>\n\n            <div className={`relative transform transition-all duration-1000 delay-300 ${isVisible ? 'translate-x-0 opacity-100' : 'translate-x-20 opacity-0'}`}>\n              <div className=\"relative group\">\n                <div className=\"absolute -inset-1 bg-gradient-to-r from-orange-500 to-blue-500 rounded-2xl blur opacity-30 group-hover:opacity-50 transition duration-300\"></div>\n                <div className=\"relative\">\n                  <img \n                    src=\"https://plus.unsplash.com/premium_photo-1681398576587-4553857e4f3f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=500\" \n                    alt=\"Innovation and technology\" \n                    className=\"rounded-2xl shadow-2xl w-full h-auto transform group-hover:scale-105 transition-transform duration-500\"\n                  />\n                  \n                  {/* Floating animated icons */}\n                  <div className=\"absolute -top-4 -right-4 bg-orange-500 rounded-2xl p-3 shadow-lg animate-bounce\">\n                    <Sparkles className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <div className=\"absolute -bottom-4 -left-4 bg-blue-500 rounded-2xl p-3 shadow-lg animate-pulse\">\n                    <Brain className=\"w-6 h-6 text-white\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Innovation Process Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"inline-flex items-center bg-orange-100 px-4 py-2 rounded-full mb-6\">\n              <Rocket className=\"w-5 h-5 text-orange-500 mr-2\" />\n              <span className=\"font-inter text-orange-500 font-semibold\">OUR PROCESS</span>\n            </div>\n            <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-6\">\n              How We Drive <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> Innovation</span>\n            </h2>\n            <p className=\"font-inter text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed\">\n              Our systematic approach transforms ideas into market-ready solutions through proven methodologies and cutting-edge technology.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[\n              {\n                number: \"01\",\n                title: \"Research & Analysis\",\n                description: \"Deep market research and competitive analysis to identify opportunities and gaps in your industry.\",\n                icon: Search,\n                color: \"blue\"\n              },\n              {\n                number: \"02\", \n                title: \"Strategy Development\",\n                description: \"Create comprehensive innovation strategies tailored to your business goals and market position.\",\n                icon: Target,\n                color: \"blue\"\n              },\n              {\n                number: \"03\",\n                title: \"Rapid Prototyping\",\n                description: \"Build and test prototypes quickly to validate concepts before full development investment.\",\n                icon: FlaskConical,\n                color: \"blue\"\n              },\n              {\n                number: \"04\",\n                title: \"AI Integration\",\n                description: \"Leverage artificial intelligence and machine learning to enhance your innovation capabilities.\",\n                icon: Brain,\n                color: \"blue\"\n              },\n              {\n                number: \"05\",\n                title: \"Testing & Validation\", \n                description: \"Rigorous testing and validation processes to ensure market readiness and user acceptance.\",\n                icon: CheckCircle,\n                color: \"blue\"\n              },\n              {\n                number: \"06\",\n                title: \"Launch & Scale\",\n                description: \"Strategic launch execution and scaling support to maximize market impact and growth.\",\n                icon: TrendingUp,\n                color: \"blue\"\n              }\n            ].map((step, index) => (\n              <Card key={index} className=\"group relative overflow-hidden border-0 shadow-lg hover:shadow-xl transition-all duration-500 hover:-translate-y-2\">\n                <CardContent className=\"p-8\">\n                  <div className=\"flex items-center mb-4\">\n                    <div className={`w-12 h-12 rounded-xl bg-blue-100 flex items-center justify-center group-hover:rotate-12 transition-transform duration-300`}>\n                      <step.icon className={`w-6 h-6 text-${step.color}-500`} />\n                    </div>\n                    <span className={`ml-4 text-2xl font-bold text-${step.color}-500 opacity-50`}>{step.number}</span>\n                  </div>\n                  <h3 className=\"font-spartan font-bold text-xl text-gray-900 mb-3 group-hover:text-blue-500 transition-colors\">\n                    {step.title}\n                  </h3>\n                  <p className=\"font-inter text-gray-600 leading-relaxed\">\n                    {step.description}\n                  </p>\n                </CardContent>\n                <div className={`absolute bottom-0 left-0 w-full h-1 bg-gradient-to-r from-${step.color}-400 to-${step.color}-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300`}></div>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Innovation Benefits Section */}\n      <section className=\"py-20 bg-gradient-to-br from-gray-50 to-blue-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div>\n              <div className=\"inline-flex items-center bg-blue-100 px-4 py-2 rounded-full mb-6\">\n                <Award className=\"w-5 h-5 text-blue-500 mr-2\" />\n                <span className=\"font-inter text-blue-500 font-semibold\">PROVEN RESULTS</span>\n              </div>\n              \n              <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-gray-900 mb-8\">\n                Why Choose Our <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> Innovation</span> Approach\n              </h2>\n              \n              <div className=\"space-y-6\">\n                {benefits.map((benefit, index) => (\n                  <div key={index} className=\"group flex items-start space-x-4 p-4 rounded-xl hover:bg-white hover:shadow-lg transition-all duration-300\">\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"w-12 h-12 bg-gradient-to-br from-blue-100 to-blue-200 rounded-xl flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                        <benefit.icon className=\"w-6 h-6 text-blue-500\" />\n                      </div>\n                    </div>\n                    <div>\n                      <h3 className=\"font-spartan font-bold text-xl text-gray-900 mb-2 group-hover:text-blue-500 transition-colors\">\n                        {benefit.title}\n                      </h3>\n                      <p className=\"font-inter text-gray-600 leading-relaxed\">\n                        {benefit.description}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"grid grid-cols-2 gap-6\">\n                <div className=\"space-y-6\">\n                  <div className=\"group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-xl transition-all duration-500 mt-4\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1581291518857-4e27b48ff24e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Innovation workspace\" \n                      className=\"w-full h-48 object-cover group-hover:scale-110 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  </div>\n                  <div className=\"group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-xl transition-all duration-500\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1553877522-43269d4ea984?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"AI workspace\" \n                      className=\"w-full h-32 object-cover group-hover:scale-110 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  </div>\n                </div>\n                <div className=\"space-y-6 mt-8\">\n                  <div className=\"group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-xl transition-all duration-500\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Team collaboration\" \n                      className=\"w-full h-32 object-cover group-hover:scale-110 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  </div>\n                  <div className=\"group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-xl transition-all duration-500\">\n                    <img \n                      src=\"https://images.unsplash.com/photo-1718241905462-56e7b9f722f3?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=300\" \n                      alt=\"Technology innovation\" \n                      className=\"w-full h-48 object-cover group-hover:scale-110 transition-transform duration-500\"\n                    />\n                    <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\"></div>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Floating animated elements */}\n              <div className=\"absolute -top-4 -left-4 w-16 h-16 bg-gradient-to-br from-orange-400 to-orange-500 rounded-2xl opacity-20 animate-pulse\"></div>\n              <div className=\"absolute -bottom-4 -right-4 w-20 h-20 bg-gradient-to-br from-blue-400 to-blue-500 rounded-2xl opacity-20 animate-bounce\"></div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section with Glitch Effect */}\n      <section className=\"py-20 bg-gradient-to-r from-orange-500 to-blue-500 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-black opacity-10\"></div>\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10\">\n          <div className=\"text-center\">\n            <div className=\"inline-flex items-center bg-white bg-opacity-20 px-6 py-3 rounded-full mb-8\">\n              <Zap className=\"w-5 h-5 text-white mr-2\" />\n              <span className=\"font-inter text-white font-semibold\">READY TO INNOVATE?</span>\n            </div>\n            \n            <h2 className=\"font-spartan font-bold text-5xl lg:text-6xl mb-6 glitch-effect\">\n              Let's Build the <span className=\"tilt-effect inline-block\">Future</span> Together\n            </h2>\n            \n            <p className=\"font-inter text-xl text-white text-opacity-90 max-w-3xl mx-auto mb-12 leading-relaxed\">\n              Transform your business with cutting-edge innovation strategies. Join over 200+ companies who trust us to drive their digital transformation.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-6 justify-center items-center\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-white text-orange-500 hover:bg-gray-100 font-inter font-bold px-12 py-4 rounded-xl text-lg transition-all duration-300 hover:scale-105 shadow-2xl group\">\n                  Start Your Innovation Journey\n                  <ArrowRight className=\"ml-3 w-6 h-6 group-hover:translate-x-2 transition-transform\" />\n                </Button>\n              </Link>\n              \n              <div className=\"flex items-center space-x-6 text-white text-opacity-90\">\n                <div className=\"flex items-center\">\n                  <Clock className=\"w-5 h-5 mr-2\" />\n                  <span className=\"font-inter\">Free Consultation</span>\n                </div>\n                <div className=\"flex items-center\">\n                  <Globe className=\"w-5 h-5 mr-2\" />\n                  <span className=\"font-inter\">Global Reach</span>\n                </div>\n              </div>\n            </div>\n            \n            {/* Stats with animations */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8 mt-16\">\n              {[\n                { number: \"200+\", label: \"Projects\" },\n                { number: \"50+\", label: \"Countries\" },\n                { number: \"94%\", label: \"Success Rate\" },\n                { number: \"85%\", label: \"ROI Increase\" }\n              ].map((stat, index) => (\n                <div key={index} className=\"text-center fade-in-scale\">\n                  <div className=\"text-4xl font-bold mb-2 text-white\">{stat.number}</div>\n                  <div className=\"text-white text-opacity-80 font-inter\">{stat.label}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n        \n        {/* Animated background elements */}\n        <div className=\"absolute top-20 left-20 w-32 h-32 bg-white bg-opacity-10 rounded-full animate-bounce\"></div>\n        <div className=\"absolute bottom-20 right-20 w-40 h-40 bg-white bg-opacity-10 rounded-2xl transform rotate-45 animate-pulse\"></div>\n      </section>\n\n      {/* Trusted Brands Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"inline-flex items-center bg-gray-100 px-4 py-2 rounded-full mb-8\">\n            <Award className=\"w-5 h-5 text-gray-500 mr-2\" />\n            <span className=\"font-inter text-gray-500 font-semibold\">TRUSTED GLOBALLY</span>\n          </div>\n          <h3 className=\"font-spartan font-bold text-3xl text-gray-900 mb-4\">\n            Trusted by <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\">1000+</span> companies across <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\">50+</span> countries\n          </h3>\n          <p className=\"font-inter text-gray-600 mb-12 max-w-2xl mx-auto\">\n            From startups to Fortune 500 companies, organizations worldwide choose us to drive their innovation initiatives.\n          </p>\n          <div className=\"relative overflow-hidden\">\n            <div className=\"flex animate-scroll space-x-16 items-center\">\n              {/* First set of brands */}\n              {brands.map((brand, index) => (\n                <div key={`first-${index}`} className=\"flex-shrink-0 opacity-60 hover:opacity-100 transition-opacity duration-300 group\">\n                  <img \n                    src={brand.src} \n                    alt={brand.name} \n                    className=\"h-8 w-auto grayscale hover:grayscale-0 transition-all duration-300 group-hover:scale-110\"\n                  />\n                </div>\n              ))}\n              {/* Duplicate set for seamless loop */}\n              {brands.map((brand, index) => (\n                <div key={`second-${index}`} className=\"flex-shrink-0 opacity-60 hover:opacity-100 transition-opacity duration-300 group\">\n                  <img \n                    src={brand.src} \n                    alt={brand.name} \n                    className=\"h-8 w-auto grayscale hover:grayscale-0 transition-all duration-300 group-hover:scale-110\"\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Prototyping Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"font-spartan font-bold text-4xl text-brand-primary mb-6\">\n              Developing and Testing Product Ideas\n            </h2>\n            <p className=\"font-inter text-xl text-gray-600 max-w-4xl mx-auto\">\n              Real Innovation Is Built, Not Just Imagined. At Gill Technologies we build, test, and iterate.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"relative\">\n              <img \n                src=\"https://plus.unsplash.com/premium_photo-1682145934698-5922e583b462?ixlib=rb-4.0.3&auto=format&fit=crop&w=600&h=400\" \n                alt=\"Prototyping workspace\" \n                className=\"rounded-2xl shadow-2xl w-full h-auto\"\n              />\n              <div className=\"absolute -bottom-6 -right-6 bg-brand-secondary rounded-2xl p-4 shadow-lg\">\n                <FlaskConical className=\"w-8 h-8 text-white\" />\n              </div>\n            </div>\n            <div>\n              <h3 className=\"font-spartan font-bold text-2xl text-brand-primary mb-6\">\n                Prototyping: Turning ideas into tangible experiences\n              </h3>\n              <p className=\"font-inter text-gray-600 text-lg mb-6 leading-relaxed\">\n                Before you commit resources to a full launch, we help you iterate quickly and inexpensively. Through rapid prototyping—whether low-fidelity mockups, functional proofs of concept, or interactive simulations—you can test assumptions, gather user feedback, and refine features.\n              </p>             \n              <div className=\"bg-brand-primary rounded-xl p-6\">\n                <div className=\"flex items-start\">\n                  <div className=\"bg-white rounded-full p-2 mr-4\">\n                    <Users className=\"w-6 h-6 text-brand-primary\" />\n                  </div>\n                  <div>\n                    <p className=\"font-inter text-white italic text-lg mb-2\">\n                      \"By embracing prototyping early, we save clients time, reduce investment risk, and improve market fit before the full launch.\"\n                    </p>\n                    <p className=\"font-inter text-blue-100 font-semibold\">Brian Gillo</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>    \n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-r from-brand-primary to-blue-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"font-spartan font-bold text-4xl lg:text-5xl text-blue mb-6\">\n            Ready to Lead with <span className=\"bg-gradient-to-r from-orange-500 via-gray-400 to-blue-500 bg-clip-text text-transparent animate-pulse\"> Innovation </span>?</h2>\n          <p className=\"font-inter text-gray-600 text-xl mb-10 max-w-3xl mx-auto\">\n            Get in Touch for Innovation Solutions and transform your business with cutting-edge technology and strategic insights.\n          </p>\n          <Link href=\"/contact\">\n          <Button className=\"bg-brand-secondary text-white hover:bg-orange-600 px-10 py-4 rounded-xl font-inter font-bold\">\n            Let's Talk Innovation\n            <ArrowRight className=\"ml-2 w-5 h-5\" />\n          </Button>\n          </Link>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":25718},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}